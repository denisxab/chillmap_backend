---
- name: Развертывание проекта
  hosts: all
  become: true
  vars:
    path_app: "/app/chillmap_backend"
  tasks:
    - name: Создание папки {{ path_app }}
      file:
        path: "{{ path_app }}"
        state: directory
        mode: "0755"

    - name: Копировать файл с сервера на локальную машину
      synchronize:
        src: "../.gitignore"
        dest: "{{ path_app }}/.gitignore"
        delete: yes

    - name: Сформировать строку исключения для rsync из .gitignore
      shell: |
        while IFS= read -r line; do
          echo "--exclude=$line"
        done < {{ path_app }}/.gitignore
      register: rsync_excludes
      changed_when: false

    - name: Копирование проекта на удаленный сервер
      synchronize:
        src: "../../"
        dest: "{{ path_app }}"
        delete: yes
        recursive: yes
        rsync_opts: "{{ rsync_excludes.stdout_lines }}"

    - name: Замена строки в файле .env с IP_ADR
      lineinfile:
        path: "{{ path_app }}/.env"
        regexp: "^IP_ADR="
        line: "IP_ADR={{ ansible_host }}"

    - name: Замена строки в файле .env с DEBUG
      lineinfile:
        path: "{{ path_app }}/.env"
        regexp: "^DEBUG="
        line: "DEBUG=False"

    - name: Проверка наличия библиотеки invoke
      command:
        cmd: pip show invoke
      register: pip_check
      ignore_errors: true

    - name: Установка invoke и docker-compose
      include_tasks: install_invoke_and_docker_compose.yml
      when: pip_check.rc != 0

    - name: Перезапуск проекта
      command:
        cmd: invoke dck.restart --prod --detach --echo
        chdir: "{{ path_app }}"
