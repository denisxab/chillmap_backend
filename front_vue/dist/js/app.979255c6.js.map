{"version":3,"file":"js/app.979255c6.js","mappings":"6EAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAyBC,EAAAA,EAAAA,IAAkB,eAEjD,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAaH,EACrC,CCJA,OAaC,E,QCRD,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASX,KAEpE,ICPYY,EAKAC,EA+HAC,EAMAC,EAQAC,EAUAC,EDrJZ,I,gBENM,SAAUC,EAAYC,GAExB,OAAOA,EAAQC,QAAQ,KAAMC,wBACjC,CAGM,SAAUC,EAAgBH,GAE5B,OAAOA,EAAQC,QAAQ,KAAMG,4BACjC,CAUOC,eAAeC,EAAgBN,GAClC,MAAMO,QAAiBC,MAAMR,EAAS,CAClCS,OAAQ,QAEZ,MAAO,CAAEC,WAAYH,EAASI,OAAQC,GAAIL,EAASK,GAAIC,OAAQN,EAASM,OAC5E,CAGOR,eAAeS,EAAgBd,EAAiBU,GACnD,MAAMH,QAA2BC,MAAMR,EAAS,CAC5CS,OAAQ,OACRM,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACL,eAAgB,kCAChB,OAAU,sBAGlB,MAAO,CAAER,WAAYH,EAASY,OAAQP,GAAIL,EAASK,GAAIC,OAAQN,EAASM,OAC5E,CAGM,SAAUO,EAAMC,GAClB,GAAIC,MAAMC,QAAQF,GACd,OAAOA,EAAMG,IAAIJ,GACd,GAAIC,GAA0B,kBAAVA,EAAoB,CAC3C,MAAMI,EAAM,CAAC,EACb,IAAK,MAAMC,KAAOL,EACdI,EAAIC,GAAON,EAAMC,EAAMK,IAE3B,OAAOD,C,CAEP,OAAOJ,CAEf,CAGM,SAAUM,EAAmBC,GAC/B,IAAIC,EAAqB,GAIzB,OAHAD,EAASE,cAAcC,SAAQC,IAC3BH,EAASI,KAAKD,EAAQE,KAAK,IAExBL,CACX,CAGOxB,eAAe8B,EAAWC,EAAaC,GAC1C,MAAM9B,QAAiBD,EACnB,iEAAiE8B,SAAWC,KAEhF,GAAI9B,EAASK,GACT,OAAOL,EAASG,KAAK4B,aAErBC,QAAQC,MAAM,+CAA+CJ,KAAOC,IAE5E,ED1EA,SAAY5C,GACRA,EAAA,gBACH,EAFD,CAAYA,IAAAA,EAAoB,KAKhC,SAAYC,GAERA,EAAA,gBAEAA,EAAA,iBAEAA,EAAA,YAEAA,EAAA,iBAEAA,EAAA,eAEAA,EAAA,WACH,CAbD,CAAYA,IAAAA,EAAY,KA+HxB,SAAYC,GACRA,EAAA,iDACAA,EAAA,wDACAA,EAAA,sCACH,CAJD,CAAYA,IAAAA,EAAkB,KAM9B,SAAYC,GACRA,EAAA,iEACAA,EAAA,8HACAA,EAAA,0CACAA,EAAA,uBACAA,EAAA,2BACH,CAND,CAAYA,IAAAA,EAAkB,KAQ9B,SAAYC,GACRA,EAAA,wBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,sBACAA,EAAA,uBACH,CARD,CAAYA,IAAAA,EAAQ,KAUpB,SAAYC,GACRA,EAAA,aACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,aACH,CALD,CAAYA,IAAAA,EAAiB,KEnJtB,MAAM2C,EAAS,CAElBC,QACI,MAAO,CAEHC,YAAkC,CAAC,EAEnCC,oBAAqC,CAAC,EAItCC,2BAAwCC,EAExCC,gBAAyB,CAAC,EAE1BC,YAAqB,GAErBC,UAAmBxD,EAAqByD,SAExCC,2BAA0CL,EAE1CM,gBAAoBN,EAEpBO,qBAAyBP,EAEjC,EACAQ,UAAW,CAEPC,uBAAuBb,EAAOd,GAC1Bc,EAAMS,sBAAwBvB,CAClC,EACA4B,mBAAmBd,EAAOd,GACtBc,EAAMM,YAAcpB,CACxB,EACA6B,wBAAwBf,EAAOd,GAC3Bc,EAAMK,gBAAkBnB,CAC5B,EACA8B,kBAAkBhB,EAAOd,GACrBc,EAAMO,UAAYrB,CACtB,EAEA+B,mBAAmBjB,EAAOd,GACtBc,EAAMC,YAAcf,CACxB,EACAgC,2BAA2BlB,EAAOd,GAC9Bc,EAAME,oBAAsBhB,CAChC,EACAiC,8BAA8BnB,EAAOd,GACjCc,EAAMG,sBAAwBjB,CAClC,EACAkC,kBAAkBpB,EAAOd,GACrBc,EAAMU,WAAarD,EAAY6B,EACnC,EACAmC,uBAAuBrB,EAAOd,GAC1Bc,EAAMW,gBAAkBzB,CAC5B,GAEJoC,QAAS,CAELC,qBAAsBvB,IAClB,MAAMwB,EAAwBxB,EAAMK,gBACpC,OAAImB,EACO,CAACA,EAAEC,SAAUD,EAAEE,WAEnB,EAAE,GAIjBC,QAAS,CAELC,wBACI,MAAE5B,EAAK,OAAE6B,IACT,MAAEC,EAAK,OAAEC,EAAM,MAAEC,IAEjBH,EAAO,0BAA2BC,GAElC,IAAIG,EAAQvD,EAAMsD,EAAMC,OACxBA,EAAMjF,EAAayE,UAAYK,EAAML,SACrCQ,EAAMjF,EAAa0E,WAAaI,EAAMJ,UACtCO,EAAMjF,EAAakF,MAAQlC,EAAMM,YACjC2B,EAAMjF,EAAauD,WAAaxD,EAAqByD,SACjDR,EAAMG,wBACN8B,EAAMjF,EAAamF,MAAQnC,EAAMG,sBAAsBiC,IAE3DL,EAAOxC,KAAK,CAAE0C,MAAOA,GACzB,EACAI,kBACI,OAAER,IACF,UACItB,EAAS,OACTwB,EAAM,MACNC,IAGJH,EAAO,oBAAqBtB,GAE5B,IAAI0B,EAAQvD,EAAMsD,EAAMC,OACxBA,EAAMjF,EAAauD,WAAaA,EAChCwB,EAAOxC,KAAK,CAAE0C,MAAOA,GACzB,EACAK,uBACI,OAAET,IACF,QACIU,EAAO,OACPR,EAAM,MACNC,IAGJH,EAAO,yBAA0BU,GACjC,IAAIN,EAAQvD,EAAMsD,EAAMC,OACxBA,EAAMjF,EAAauF,SAAWA,EAC9BR,EAAOxC,KAAK,CAAE0C,MAAOA,GACzB,EACAO,8BACI,OAAEX,IACF,KACIM,EAAI,OACJJ,EAAM,MACNC,IAGJH,EAAO,gCAAiCM,GACxC,IAAIF,EAAQvD,EAAMsD,EAAMC,OACxBA,EAAMjF,EAAamF,MAAQA,EAAKC,GAChCL,EAAOxC,KAAK,CAAE0C,MAAOA,GACzB,GAGJQ,YAAY,G,cCzIhB,MAAMC,EAAa,CAAEN,GAAI,YACnBO,EAAa,CAAEC,MAAO,YACtBC,EAAa,CAAED,MAAO,UACtBE,EAAa,CAAEF,MAAO,YACtBG,EAAa,CACjBC,IAAK,oBACLJ,MAAO,qBAEHK,EAAa,CAAEL,MAAO,mBACtBM,EAAa,CAAC,SACdC,EAAa,CAAEP,MAAO,kBAEtB,SAAUzG,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM2G,GAAqBzG,EAAAA,EAAAA,IAAkB,WACvC0G,GAA0B1G,EAAAA,EAAAA,IAAkB,gBAC5C2G,GAA8B3G,EAAAA,EAAAA,IAAkB,oBAEtD,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,EAAY,EAC3Dc,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,MAAOd,EAAY,EACrDe,EAAAA,EAAAA,IAAaN,EAAoB,CAC/BO,kBAAmBlH,EAASmH,gBAC5BC,eAAgBrH,EAAMqH,gBACrB,KAAM,EAAG,CAAC,oBAAqB,oBACjC,KAAM,CACP,CAACC,EAAAA,GAAQtH,EAAMqH,mBAEjBJ,EAAAA,EAAAA,GAAoB,MAAOZ,EAAY,EACrCa,EAAAA,EAAAA,IAAaL,EAAyB,CACpCL,IAAK,eACLe,gBAAiBtH,EAASuH,kBAC1BC,kBAAmBxH,EAASyH,qBAC3B,KAAM,EAAG,CAAC,kBAAmB,yBAElCT,EAAAA,EAAAA,GAAoB,MAAOX,EAAY,EACrCW,EAAAA,EAAAA,GAAoB,MAAOV,EAAY,EACrCS,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,QAAS,CAC3Cb,MAAO,kBACPuB,KAAM,QACNnB,IAAK,kBACLoB,QAAS/H,EAAO,KAAOA,EAAO,GAExC,IAAIgI,IAAU5H,EAAS6H,yBAA2B7H,EAAS6H,2BAA2BD,KAC3E,KAAM,KAAM,CACb,CAACP,EAAAA,GAAQtH,EAAM+H,uBAEjBf,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,QAAS,CAC3Cb,MAAO,kBACPuB,KAAM,QACNnB,IAAK,wBACLoB,QAAS/H,EAAO,KAAOA,EAAO,GAExC,IAAIgI,IAAU5H,EAAS+H,sBAAwB/H,EAAS+H,wBAAwBH,KACrE,KAAM,KAAM,CACb,CAACP,EAAAA,IAAStH,EAAM+H,uBAEjB,MACHd,EAAAA,EAAAA,GAAoB,MAAOR,EAAY,EACrCQ,EAAAA,EAAAA,GAAoB,QAAS,CAC3BU,KAAM,OACNxF,MAAOvC,EAAKmF,qBACZa,GAAI,wBACJqC,YAAa,iBACbC,SAAU,IACT,KAAM,EAAGxB,MAEdM,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,MAAON,EAAY,EACrDO,EAAAA,EAAAA,IAAaJ,EAA6B,CAAEN,IAAK,cAAgB,KAAM,MACtE,KAAM,CACP,CAACc,EAAAA,GAAQtH,EAAMmI,+BAIvB,CCxEA,MAAMjC,EAAa,CAAEkC,MAAO,CAAC,MAAQ,OAAO,OAAS,SAC/CjC,EAAa,CACjBK,IAAK,WACL4B,MAAO,CAAC,MAAQ,OAAO,OAAS,SAG5B,SAAUzI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQG,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,EAAY,EAC3De,EAAAA,EAAAA,GAAoB,MAAOd,EAAY,KAAM,MAEjD,C,0JCsBA,MAAMkC,EAAUxH,EAAY,2BAEtByH,EAAYzH,EAAY,oBAE9B,QACI0H,MAAO,CAEH,gBAEA,mBAEJ/G,OACI,MAAO,CAEHc,SAAKsB,EAEL4E,UAAW,IAAIC,EAAAA,EAAU,CAGrBC,UAAW,YAEXC,OAAQ,IAAIC,EAAAA,EAEZC,QAAS,EAETC,SAAS,IAIbC,YAAa,IAAIC,EAAAA,EAAa,CAC1BN,UAAW,cACXC,OAAQ,IAAIM,EAAAA,EACZb,MAAO,IAAIc,EAAAA,GAAM,CAEbC,MAAO,IAAIC,EAAAA,EAAK,CAEZC,IAAKf,EAELgB,OAAOC,EAAAA,EAAAA,IAAO,CAAC,GAAK,SAG5BT,SAAS,IAGbU,aAAc,IAAIR,EAAAA,EAAa,CAE3BN,UAAW,eACXC,OAAQ,IAAIM,EAAAA,EACZb,MAAO,IAAIc,EAAAA,GAAM,CAEbC,MAAO,IAAIC,EAAAA,EAAK,CAEZC,IAAKhB,EAELiB,OAAOC,EAAAA,EAAAA,IAAO,CAAC,GAAK,SAG5BT,SAAS,IAGbW,8BAA0B7F,EAElC,EAEA8F,QAAS,KACFC,EAAAA,EAAAA,IAAa,SAAU,CACtB,qBACA,qBACA,mCAGDC,EAAAA,EAAAA,IAAW,SAAU,CACpB,yBACA,+BACA,2BAIJC,SACIC,EACAC,EACAC,GASAC,KAAK3H,IAAM,IAAI4H,EAAAA,EAAM,CAEjBC,OAAQF,KAAKG,MAAM,YAEnBC,OAAQ,CAEJJ,KAAKzB,UAELyB,KAAKlB,aAGTuB,KAAM,IAAIC,EAAAA,GAAK,CAEX7E,KAAMqE,EAENS,QAAQC,EAAAA,EAAAA,IAAW,CACfX,EAAc5E,UACd4E,EAAc7E,WAGlByF,qBAAqB,EAErBC,WAAY,gBAIpBV,KAAKW,gBAAgBd,GAErBG,KAAK3H,IAAIuI,SAASZ,KAAKT,cAGvBS,KAAK3H,IAAIwI,GAAG,QAASb,KAAKc,gBAE1Bd,KAAK3H,IAAIwI,GAAG,cAAeb,KAAKe,mBAEhCf,KAAK3H,IAAIwI,GAAG,UAAWb,KAAKgB,YAE5BhB,KAAKiB,mBAAmBlB,EAQ5B,EAGAmB,UACIlB,KAAK3F,mBAAmB2F,KAAKnG,YAAc,EAC/C,EAEAsH,YACInB,KAAK3F,mBAAmB2F,KAAKnG,YAAc,EAC/C,EAEAuH,eAAe/F,EAA2BgG,GAAY,GAG9ChG,IACA2E,KAAKsB,YAAYC,WACbf,EAAAA,EAAAA,IAAW,CAACnF,EAAMJ,UAAWI,EAAML,YAEnCqG,GACArB,KAAKW,gBAAgBtF,GAGjC,EAEAmG,WACInG,EACAoG,OAAyC9H,GACzC,OACI+H,EAA0B,QAC1BC,EAA4B,CAAC,EAAG,GAAE,UAClCC,EAAoB,aACpB,CAAC,GAUL,GAAIvG,EAAO,CAEP,IAAIwG,EAAS,IAAIC,EAAAA,EAAQ,CACrBC,SAAU,IAAIC,EAAAA,GACVxB,EAAAA,EAAAA,IAAW,CAACnF,EAAMJ,UAAWI,EAAML,cAGvC0G,GAEAG,EAAOI,SACH,IAAIhD,EAAAA,GAAM,CAENC,MAAO,IAAIC,EAAAA,EAAK,CAEZC,IAAKsC,EAELrC,OAAOC,EAAAA,EAAAA,IAAOqC,KAGlB3J,KAAM,IAAIkK,EAAAA,EAAK,CAEXlK,KAAM4J,EAENvC,MAAO,CAAC,IAAK,KAIb8C,QAAS,GAITC,OAAQ,IAAIC,EAAAA,EAAO,CACfC,MAAO,OACPC,MAAO,IAEXC,UAAW,YAKvBf,GAOAI,EAAOY,cAAchB,GAGzBzB,KAAKT,aAAamD,YAAYC,WAAWd,E,CAEjD,EAEAe,sBAAsBC,GAElB,MAAMpJ,EACFuG,KAAKvG,oBAEHqJ,EAAOrJ,EAAoBoJ,EAAME,YACjC5E,EAAQ,CACVuD,OAAQ9K,EAAYkM,EAAKE,SACzBrB,QAAS,CAACmB,EAAKG,WAAYH,EAAKI,aAGpC/E,EAAM,aAAe,GAEjB0E,EAAMM,OAAS,MAGfN,EAAMO,WAAWC,UAAU,EAAG,MAElC,MAAMhI,EAAQ2E,KAAK9F,gBAAgBoJ,6BAC/B,GAAGT,EAAMU,UAAUV,EAAMW,UAG7B,IAAIC,EAAiBZ,EACrBY,EAAe,eAAiBX,EAAKY,KACrCD,EAAe,SAAW,CAACpI,EAAML,SAAUK,EAAMJ,WAEjD+E,KAAKwB,WAAWnG,EAAOoI,EAAgBtF,EAC3C,EAEAwC,gBAAgBtF,GAMZ,GAAIA,EAAO,CAEP2E,KAAKlB,YACA4D,YACAiB,cAAc3D,KAAKR,0BAExB,IAAIqC,EAAS,IAAIC,EAAAA,EACb,IAAIE,EAAAA,GAAMxB,EAAAA,EAAAA,IAAW,CAACnF,EAAMJ,UAAWI,EAAML,aAGjDgF,KAAKR,yBAA2BqC,EAEhC7B,KAAKlB,YAAY4D,YAAYC,WAAWd,E,CAEhD,EAEA3K,yBAAyB0M,GACrB,MAAMtK,QAAyBnC,EAAgByM,GAC/C,GAAItK,EAAO7B,GAAI,CACX,MAAM+B,EAAmCF,EAAO/B,KAEhDyI,KAAK6D,aAAa7D,KAAKT,cAEvBS,KAAKxF,mBAAmBhB,GAExBwG,KAAK8D,sBAAsB9D,KAAKT,aAAcS,KAAKxG,Y,MAEnDJ,QAAQC,MAAM,8BAEtB,EAEAwK,aAAaE,GACTA,EAAMrB,YAAYsB,OACtB,EAEAF,sBAAsBC,EAAcE,GAOhCF,EAAMG,YAAW,GAEjB,MAAMzK,EAAsBwK,EAAYE,OAAOC,SAC/CpE,KAAKvF,2BAA2BhB;;AAEhC,IAAK,IAAIqJ,KAAQmB,EAAYE,OAAOtB,MAChCoB,EAAYE,OAAOtB,MAAMC,GAAMlK,SAASC,IACpCmH,KAAK4C,sBAAsB/J,EAAQ,GAG/C,EAIAwL,0BAA0BC,GAEtB,IAAIhM,GAAM,EAcV,OAZA0H,KAAK3H,IAAIkM,sBAELD,EAAIE,OAEJ,CAACC,EAAeV,KAEgB,gBAAxBA,EAAMW,iBACN1E,KAAK2E,kBAAkBL,EAAKG,GAC5BnM,GAAM,E,IAIXA,CACX,EAEAwI,eAAewD,GAEX,GAAItE,KAAKqE,0BAA0BC,GAC/B,OAAO,KAGX,MAAMjJ,GAAQuJ,EAAAA,EAAAA,IACVN,EAAIO,WACJ,YACA,aACFC,UAEF9E,KAAK7E,uBAAuB,CACxBE,MAAO,CACHL,SAAUK,EAAM,GAChBJ,UAAWI,EAAM,IAErBC,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,SAEZ3J,GAEA2E,KAAKW,gBACDX,KAAKsD,6BAA6BjI,EAAM4J,aAGhD7L,QAAQ8L,IAAI,mCAAoC7J,GAChD2E,KAAKmF,MAAM,kBAAmBb,EAClC,EAEAvD,kBAAkBuD,GAEdtE,KAAKqE,0BAA0BC,EACnC,EAEAK,kBAAkBL,EAA+BG,GAE7B,eAAZH,EAAI5G,MACJtE,QAAQgM,MAAM,uBAGF,SAAZd,EAAI5G,MACJsC,KAAKzC,kBAAkBkH,EAE/B,EAEAlH,kBAAkBkH,GAEd,MAAMhB,EAAiBgB,EAAKY,gBAE5BrF,KAAKjE,6BAA6B,CAC9BL,KAAM+H,EACNnI,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,SAGhBhF,KAAK7E,uBAAuB,CACxBE,MAAO,CACHL,SAAUyI,EAAepI,MAAM,GAC/BJ,UAAWwI,EAAepI,MAAM,IAEpCC,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,SAEhB5L,QAAQ8L,IAAI,oBAAqBzB,GAEjCzD,KAAKmF,MAAM,gBAAiB1B,EAChC,EAEAzC,WAAWsD,GACPtE,KAAK3F,mBAAmB2F,KAAKsB,YAAYgE,QAAQ7J,KACrD,EAKA6H,6BAA6BiC,GACzB,GAAiB,IAAbA,EAAiB,CACjB,MAAMC,EAAID,EAAUE,MAAM,KAAKX,UAC/B,GAAgB,GAAZU,EAAEE,OACF,MAAO,CACHzK,UAAW0K,WAAWH,EAAE,IACxBxK,SAAU2K,WAAWH,EAAE,I,MAI/BpM,QAAQwM,KAAK,2BAErB,GAEJC,SAAU,CAENvE,cACI,OAAOtB,KAAK3H,IAAIyN,SACpB,EAEAC,gBACI,OAAO/F,KAAK3H,IAAI2N,WACpB,MAEGC,EAAAA,EAAAA,IAAS,SAAU,CAClB,cACA,sBACA,kBACA,oBAEDC,EAAAA,EAAAA,IAAW,SAAU,CAAC,2BC3djC,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,U,WCLA,MACMjK,GAAa,CAAEE,MAAO,cACtBD,GAAa,CAAEC,MAAO,mBACtBC,GAAa,CAAED,MAAO,OACtBE,GAAa,CAAEE,IAAK,mBACpBD,GAAa,CAAEH,MAAO,QACtBK,GAAa,CAAEL,MAAO,kBACtBM,GAAa,CAAEN,MAAO,OACtBO,GAAa,CAAEH,IAAK,kBACpB4J,GAAa,CAAEhK,MAAO,QACtBiK,GAAc,CAAEjK,MAAO,cACvBkK,GAAc,CAAElK,MAAO,OACvBmK,GAAc,CAAE/J,IAAK,cACrBgK,GAAc,CAAEpK,MAAO,QACvBqK,GAAc,CAAErK,MAAO,eACvBsK,GAAc,CAAEtK,MAAO,OACvBuK,GAAc,CAAEnK,IAAK,eACrBoK,GAAc,CAAExK,MAAO,QACvByK,GAAc,CAAEzK,MAAO,OAEvB,SAAUzG,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM6Q,GAAwB3Q,EAAAA,EAAAA,IAAkB,cAEhD,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,GAAY,EAC3De,EAAAA,EAAAA,GAAoB,MAAOd,GAAY,EACrCc,EAAAA,EAAAA,GAAoB,MAAOZ,GAAY,EACrCY,EAAAA,EAAAA,GAAoB,MAAOX,GAAY,KAAM,QAE/CW,EAAAA,EAAAA,GAAoB,MAAOV,IAAYwK,EAAAA,GAAAA,IAAiB/Q,EAAMgR,aAAc,MAE9E/J,EAAAA,EAAAA,GAAoB,MAAOR,GAAY,EACrCQ,EAAAA,EAAAA,GAAoB,MAAOP,GAAY,EACrCO,EAAAA,EAAAA,GAAoB,MAAON,GAAY,KAAM,QAE/CM,EAAAA,EAAAA,GAAoB,MAAOmJ,IAAYW,EAAAA,GAAAA,IAAiB/Q,EAAMqN,YAAa,MAE7EpG,EAAAA,EAAAA,GAAoB,MAAOoJ,GAAa,EACtCpJ,EAAAA,EAAAA,GAAoB,MAAOqJ,GAAa,EACtCrJ,EAAAA,EAAAA,GAAoB,MAAOsJ,GAAa,KAAM,QAEhDtJ,EAAAA,EAAAA,GAAoB,MAAOuJ,IAAaO,EAAAA,GAAAA,IAAiB/Q,EAAMoN,QAAS,MAE1EnG,EAAAA,EAAAA,GAAoB,MAAOwJ,GAAa,EACtCxJ,EAAAA,EAAAA,GAAoB,MAAOyJ,GAAa,EACtCzJ,EAAAA,EAAAA,GAAoB,MAAO0J,GAAa,KAAM,QAEhD1J,EAAAA,EAAAA,GAAoB,MAAO2J,IAAaG,EAAAA,GAAAA,IAAiB/Q,EAAMiR,SAAU,MAE3EhK,EAAAA,EAAAA,GAAoB,MAAO4J,GAAa,CACrC7Q,EAAM2C,UAAY3C,EAAM2C,SAASgN,OAAS,IACtCvP,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAayQ,EAAuB,CACjDtO,IAAK,EACL0O,YAAalR,EAAM2C,UAClB,KAAM,EAAG,CAAC,kBACbwO,EAAAA,EAAAA,IAAoB,IAAI,MAGlC,CCzDA,MACMjL,GAAa,CAAEE,MAAO,eACtBD,GAAa,CAAC,QACdE,GAAa,CAAE7D,IAAK,GAEpB,SAAU7C,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQG,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,GAAY,GAC1D9F,EAAAA,EAAAA,KAAW,IAAO2G,EAAAA,EAAAA,IAAoBqK,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYvR,EAAOoR,aAAa,CAACnE,EAAMuE,MACrFlR,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAO,CAC/CX,MAAO,OACP5D,IAAK8O,GACJ,CACe,iBAARvE,GAAoBA,EAAKwE,SAAS,SACrCnR,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,IAAK,CACtCvE,IAAK,EACL2H,OAAQ,SACRqH,KAAMzE,IACLgE,EAAAA,GAAAA,IAAiBhE,GAAO,EAAG5G,OAC7B/F,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,OAAQV,IAAY0K,EAAAA,GAAAA,IAAiBhE,GAAO,SAEnF,OAER,CCvBA,QAEI0E,MAAO,CACHP,YAAa,CACTvJ,KAAM+J,UCElB,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCHA,MAAMV,GAAcnQ,EAAY,yBAC1BwM,GAAaxM,EAAY,wBACzBuM,GAASvM,EAAY,oBACrBoQ,GAAUpQ,EAAY,qBAE5B,QACI8Q,WAAY,CAAEC,WAAUA,IACxBpQ,OACI,MAAO,CACHwP,iBAAapN,EACbyJ,gBAAYzJ,EACZwJ,YAAQxJ,EACRqN,aAASrN,EACTjB,cAAUiB,EAElB,EACAiO,UACI5H,KAAKG,MAAM,mBAAmBf,IAAM2H,GACpC/G,KAAKG,MAAM,kBAAkBf,IAAMgE,GACnCpD,KAAKG,MAAM,cAAcf,IAAM+D,GAC/BnD,KAAKG,MAAM,eAAef,IAAM4H,EACpC,EACAa,MAAO,CACHC,gBAAiB,CACb5Q,cAAcuB,GAEVuH,KAAK+G,YACD/G,KAAKvG,oBAAoBhB,EAASsK,YAAYW,KAClD1D,KAAKoD,WAAa3K,EAAS2K,WAC3BpD,KAAKmD,OAAS1K,EAAS0K,OACvBnD,KAAKgH,QAAUvO,EAASuO,QACxBhH,KAAKtH,SAAWF,EAAmBC,GACnCuH,KAAKgH,cAAgBhO,EACjBP,EAAS8K,OACT9K,EAAS+K,OAEjB,EACAuE,MAAM,IAGdlC,SAAU,KACHI,EAAAA,EAAAA,IAAS,SAAU,CAAC,sBAAuB,0BAE9C6B,kBACI,OAAO9H,KAAKtG,qBAChB,IC5CR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCPA,MAAMsO,GAAeC,KAAMC,EAAAA,EAAAA,IAAa,mBAAmBD,EAAEA,KAAIE,EAAAA,EAAAA,MAAcF,GACzEhM,GAAa,CAAEE,MAAO,iBACtBD,GAA2B8L,IAAa,KAAmBhL,EAAAA,EAAAA,GAAoB,MAAO,CAAEb,MAAO,SAAW,MAAO,KAEjH,SAAUzG,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMoS,GAA6BlS,EAAAA,EAAAA,IAAkB,mBAC/CmS,GAAiCnS,EAAAA,EAAAA,IAAkB,uBAEzD,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAO,CAC/CX,MAAO,gBACPmM,QAAS1S,EAAO,KAAOA,EAAO,IAAK2S,EAAAA,EAAAA,KAEvC,IAAI3K,IAAU5H,EAASwS,eAAiBxS,EAASwS,iBAAiB5K,IAAQ,CAAC,SACvE6K,SAAU,KACT,EACDzL,EAAAA,EAAAA,GAAoB,MAAOf,GAAY,EACrCc,EAAAA,EAAAA,KAAgBE,EAAAA,EAAAA,IAAamL,EAA4B,KAAM,KAAM,KAAM,CACzE,CAAC/K,EAAAA,GAAkC,oBAA1BxH,EAAOuH,mBAElBL,EAAAA,EAAAA,KAAgBE,EAAAA,EAAAA,IAAaoL,EAAgC,CAAEK,gBAAiB1S,EAASwS,eAAiB,KAAM,EAAG,CAAC,oBAAqB,CACvI,CAACnL,EAAAA,GAAkC,wBAA1BxH,EAAOuH,oBAGpBlB,IACAc,EAAAA,EAAAA,GAAoB,QAAS,CAC3BT,IAAK,kBACLJ,MAAO,kBACPuB,KAAM,QACNC,QAAS/H,EAAO,KAAOA,EAAO,GAEpC,IAAIgI,IAAU5H,EAASwS,eAAiBxS,EAASwS,iBAAiB5K,KAC3D,KAAM,MACR,GACL,CCjCA,MACM3B,GAAa,CAAEE,MAAO,OACtBD,GAAa,CAAEC,MAAO,SACtBC,GAAa,CACjB7D,IAAK,EACL4D,MAAO,QAEHE,GAAa,CAAEF,MAAO,SACtBG,GAAa,CACjB/D,IAAK,EACL4D,MAAO,QAEHK,GAAa,CAAC,QACdC,GAAa,CAAElE,IAAK,GACpBmE,GAAa,CAAEP,MAAO,mBAEtB,SAAUzG,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM6Q,GAAwB3Q,EAAAA,EAAAA,IAAkB,cAEhD,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,GAAY,GAC1D9F,EAAAA,EAAAA,KAAW,IAAO2G,EAAAA,EAAAA,IAAoBqK,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYpR,EAAS2S,WAAW,CAAC7F,EAAMuE,MACrFlR,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAO,CAC/CX,MAAO,MACP5D,IAAK8O,GACJ,EACDrK,EAAAA,EAAAA,GAAoB,MAAOd,IAAY4K,EAAAA,GAAAA,IAAiBhE,EAAK8F,OAAQ,KACpEzS,EAAAA,EAAAA,KAAW,IAAO2G,EAAAA,EAAAA,IAAoBqK,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYtE,EAAKvL,MAAM,CAACsR,EAAOC,MAC7E3S,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAO,CAC/CX,MAAO,iBACP5D,IAAKuQ,GACJ,CACAD,EAAMnF,OACFvN,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOV,IAAY0K,EAAAA,GAAAA,IAAiB+B,EAAMnF,MAAO,KACpFwD,EAAAA,EAAAA,IAAoB,IAAI,IAC5BlK,EAAAA,EAAAA,GAAoB,MAAOX,GAAY,CACd,iBAAfwM,EAAM3Q,QACT/B,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOR,GAAY,EACpDW,EAAAA,EAAAA,IAAa4J,EAAuB,CAClCI,YAAa4B,EAAM3Q,OAClB,KAAM,EAAG,CAAC,mBAGiB,iBAAf2Q,EAAM3Q,OACb2Q,EAAM3Q,MAAMoP,SAAS,SAE5BnR,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,IAAK,CACtCvE,IAAK,EACL2H,OAAQ,SACRqH,KAAMsB,EAAM3Q,QACX4O,EAAAA,GAAAA,IAAiB+B,EAAM3Q,OAAQ,EAAGsE,OACpCrG,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,OAAQL,IAAYqK,EAAAA,GAAAA,IAAiB+B,EAAM3Q,OAAQ,WAG9F,WAEJ,OACJ8E,EAAAA,EAAAA,GAAoB,MAAON,GAAY,EACrCM,EAAAA,EAAAA,GAAoB,QAAS,CAC3BW,QAAS/H,EAAO,KAAOA,EAAO,GAEtC,IAAIgI,IAAU5H,EAAS+S,mBAAqB/S,EAAS+S,qBAAqBnL,IAClEzB,MAAO,cACPuB,KAAM,QACNnB,IAAK,eACJ,KAAM,QAGf,CCrDO,MAAMyM,GAAkBpS,EAAY,yBAkB3C,SAASqS,KACL,MAAO,CACHC,YAAQvP,EACRwP,aAASxP,EACTyP,QAAIzP,EACJ0P,QAAI1P,EACJ2P,gBAAY3P,EACZ4P,gBAAY5P,EACZ6P,cAAU7P,EAElB,CAEA,QAEI+N,WAAY,CAAEC,WAAUA,IAExBpQ,OACI,MAAO,CAEHwP,iBAAqBpN,EACrBwJ,YAAgBxJ,EAChByJ,gBAAoBzJ,EACpBjB,cAAoBiB,EACpBqN,aAAiBrN,EAGjB8P,uBAA2B9P,EAE3B+P,sBAA0B/P,EAE1BgQ,wBAA4BhQ,EAE5BiQ,mBAAqCX,KAE7C,EACArB,UAEI5H,KAAKG,MAAM,eAAef,IAAM4J,EACpC,EAEAvJ,QAAS,CAELvI,iBAAiBsQ,GAEbxH,KAAK6J,WAYT,EAEAC,UAAUC,GACN/J,KAAKyJ,kBAAoBhT,EAAmBsT,EAAIN,mBAChDzJ,KAAK0J,iBAAmB,GAAGK,EAAIL,iBAAiBxR,SAC5CvB,EAAkBoT,EAAIL,iBAAiBM,YAE3ChK,KAAK4J,iBAAmBG,EAAIH,iBAC5B5J,KAAK2J,mBAAqB,SAASI,EAAIJ,oBAC3C,EAEAE,YACI7J,KAAKyJ,uBAAoB9P,EACzBqG,KAAK0J,sBAAmB/P,EACxBqG,KAAK4J,iBAAmBX,KACxBjJ,KAAK2J,wBAAqBhQ,CAC9B,EAEAoP,oBAAqB,GAEzBlB,MAAO,CACHC,gBAAiB,CACbmC,QAAQxR,GAEJuH,KAAK+G,YACD/G,KAAKvG,oBAAoBhB,EAASsK,YAAYW,KAClD1D,KAAKmD,OAAS1K,EAAS0K,OACvBnD,KAAKoD,WAAa3K,EAAS2K,WAC3BpD,KAAKgH,QAAUvO,EAASuO,QACxBhH,KAAKtH,SAAWF,EAAmBC,GAEnCuH,KAAKkK,WAAWzR,EACpB,EACAsP,MAAM,IAGdlC,SAAU,KACHI,EAAAA,EAAAA,IAAS,SAAU,CAAC,sBAAuB,0BAG9C6B,kBACI,OAAO9H,KAAKtG,qBAChB,EAEAiP,YACI,MAAO,CACH,CACIC,MAAO,mBACPrR,KAAM,CACF,CACImM,KAAM,cACNxL,MAAO8H,KAAK+G,aAEhB,CACIrD,KAAM,UACNxL,MAAO8H,KAAKmD,QAEhB,CACIO,KAAM,WACNxL,MAAO8H,KAAKoD,YAEhB,CACIM,KAAM,QACNxL,MAAO8H,KAAKgH,SAEhB,CACItD,KAAM,mBACNxL,MAAO8H,KAAKyJ,mBAEhB,CACI/F,KAAM,8BACNxL,MAAO8H,KAAK0J,kBAEhB,CACIhG,KAAM,cACNxL,MAAO8H,KAAK2J,sBAIxB,CACIf,MAAO,yBACPrR,KAAM,CACF,CACIW,MAAO8H,KAAKtH,YAIxB,CACIkQ,MAAO,wBACPrR,KAAM,CACF,CAAEmM,KAAM,SAAUxL,MAAO8H,KAAK4J,iBAAiBV,QAC/C,CACIxF,KAAM,UACNxL,MAAO8H,KAAK4J,iBAAiBT,SAEjC,CAAEzF,KAAM,KAAMxL,MAAO8H,KAAK4J,iBAAiBR,IAC3C,CAAE1F,KAAM,KAAMxL,MAAO8H,KAAK4J,iBAAiBP,IAC3C,CACI3F,KAAM,aACNxL,MAAO8H,KAAK4J,iBAAiBN,YAEjC,CACI5F,KAAM,aACNxL,MAAO8H,KAAK4J,iBAAiBL,YAEjC,CACI7F,KAAM,WACNxL,MAAO8H,KAAK4J,iBAAiBJ,YAKjD,ICnMR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCPA,MACMvN,GAAa,CAAEE,MAAO,aACtBD,GAAa,CAAEC,MAAO,aACtBC,GAAa,CAAED,MAAO,kBAEtB,SAAUzG,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMmU,GAAsBjU,EAAAA,EAAAA,IAAkB,YAE9C,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,GAAY,EAC3Dc,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,MAAOd,GAAY,EACrDc,EAAAA,EAAAA,GAAoB,MAAO,CACzBb,MAAO,MACPwB,QAAS/H,EAAO,KAAOA,EAAO,GAAMwU,GAAiBpU,EAASqU,YAAY,eACzE,4CACHrN,EAAAA,EAAAA,GAAoB,MAAO,CACzBb,MAAO,MACPwB,QAAS/H,EAAO,KAAOA,EAAO,GAEtC,IAAIgI,IAAU5H,EAASsU,cAAgBtU,EAASsU,gBAAgB1M,KACvD,qBACHZ,EAAAA,EAAAA,GAAoB,MAAO,CACzBb,MAAO,MACPwB,QAAS/H,EAAO,KAAOA,EAAO,GAAMwU,GAAiBpU,EAASqU,YAAY,WACzE,SACHrN,EAAAA,EAAAA,GAAoB,MAAO,CACzBb,MAAO,MACPwB,QAAS/H,EAAO,KAAOA,EAAO,GAAMwU,GAAiBpU,EAASqU,YAAY,kBACzE,kBACHrN,EAAAA,EAAAA,GAAoB,MAAO,CACzBb,MAAO,MACPwB,QAAS/H,EAAO,KAAOA,EAAO,GAAMwU,GAAiBpU,EAASqU,YAAY,WACzE,cACF,KAAM,CACP,CAAChN,EAAAA,QAA4B1D,GAApB5D,EAAMwU,eAEjBvN,EAAAA,EAAAA,GAAoB,MAAOZ,GAAY,EACrCW,EAAAA,EAAAA,KAAgBE,EAAAA,EAAAA,IAAakN,EAAqB,CAChD5N,IAAK,YACLiO,aAAcxU,EAASyU,WACvB/B,gBAAiB1S,EAASwS,eACzB,KAAM,EAAG,CAAC,eAAgB,oBAAqB,CAChD,CAACnL,EAAAA,GAA6B,cAArBtH,EAAMwU,iBAIvB,CC7CA,MAAMvC,GAAeC,KAAMC,EAAAA,EAAAA,IAAa,mBAAmBD,EAAEA,KAAIE,EAAAA,EAAAA,MAAcF,GACzEhM,GAAa,CAAEE,MAAO,aACtBD,GAAa,CAAEC,MAAO,OACtBC,GAA2B4L,IAAa,KAAmBhL,EAAAA,EAAAA,GAAoB,MAAO,CAAEb,MAAO,SAAW,mBAAoB,KAC9HE,GAAa,CAAEF,MAAO,OACtBG,GAA2B0L,IAAa,KAAmBhL,EAAAA,EAAAA,GAAoB,MAAO,CAAEb,MAAO,SAAW,oBAAqB,KAC/HK,GAAa,CAAEL,MAAO,OACtBM,GAA2BuL,IAAa,KAAmBhL,EAAAA,EAAAA,GAAoB,MAAO,CAAEb,MAAO,SAAW,iBAAkB,KAC5HO,GAAa,CAAC,SACdyJ,GAAa,CAAEhK,MAAO,OACtBiK,GAA4B4B,IAAa,KAAmBhL,EAAAA,EAAAA,GAAoB,MAAO,CAAEb,MAAO,SAAW,iBAAkB,KAC7HkK,GAAc,CAAC,SAEf,SAAU3Q,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM0U,GAAqBxU,EAAAA,EAAAA,IAAkB,WAE7C,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,GAAY,EAC3De,EAAAA,EAAAA,GAAoB,QAASd,GAAY,CACvCE,IACAW,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,QAAS,CAC3C,sBAAuBpH,EAAO,KAAOA,EAAO,GAAMwU,GAAkBrU,EAAM4U,UAAaP,IACtF,KAAM,KAAM,CACb,CAACQ,EAAAA,GAAa7U,EAAM4U,gBAGxB3N,EAAAA,EAAAA,GAAoB,QAASX,GAAY,CACvCC,IACAS,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,QAAS,CAC3C,sBAAuBpH,EAAO,KAAOA,EAAO,GAAMwU,GAAkBrU,EAAMoN,OAAUiH,GACpF1M,KAAM,SACNmN,IAAK,IACLC,IAAK,KACJ,KAAM,KAAM,CACb,CAACF,EAAAA,GAAa7U,EAAMoN,aAGxBnG,EAAAA,EAAAA,GAAoB,QAASR,GAAY,CACvCC,IACAM,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,SAAU,CAC5C,sBAAuBpH,EAAO,KAAOA,EAAO,GAAMwU,GAAkBrU,EAAMgD,KAAQqR,GAClFW,SAAU,GACV5O,MAAO,QACN,GACAhG,EAAAA,EAAAA,KAAW,IAAO2G,EAAAA,EAAAA,IAAoBqK,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYrR,EAAMiV,aAAcC,KAC9E9U,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,SAAU,CAAE5E,MAAO+S,IAAUnE,EAAAA,GAAAA,IAAiBmE,EAAOlS,MAAO,EAAG2D,OACvG,OACH,KAAM,CACP,CAACwO,EAAAA,GAAenV,EAAMgD,WAG1BiE,EAAAA,EAAAA,GAAoB,QAASmJ,GAAY,CACvCC,IACArJ,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,SAAU,CAC5C,sBAAuBpH,EAAO,KAAOA,EAAO,GAAMwU,GAAkBrU,EAAMoV,UAAaf,IACtF,GACAjU,EAAAA,EAAAA,KAAW,IAAO2G,EAAAA,EAAAA,IAAoBqK,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYrR,EAAMqV,kBAAmBH,KACnF9U,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,SAAU,CAAE5E,MAAO+S,IAAUnE,EAAAA,GAAAA,IAAiBmE,EAAOvH,MAAO,EAAG2C,OACvG,OACH,KAAM,CACP,CAAC6E,EAAAA,GAAenV,EAAMoV,gBAG1BlO,EAAAA,EAAAA,IAAayN,EAAoB,CAC/BvO,MAAO,UACPjE,MAAO,YACPmT,UAAWrV,EAASsV,eACnB,KAAM,EAAG,CAAC,eACbtO,EAAAA,EAAAA,GAAoB,QAAS,CAC3BT,IAAK,aACLJ,MAAO,aACPuB,KAAM,QACNC,QAAS/H,EAAO,KAAOA,EAAO,GAEpC,IAAIgI,IAAU5H,EAASyU,YAAczU,EAASyU,cAAc7M,KACrD,KAAM,MAEb,C,2CC7EId,EAAAA,EAAAA,IAAuE,UAA/DX,MAAM,gBAAiBwB,QAAK/H,EAAA,KAAAA,EAAA,OAAAgI,IAAE5H,EAAAqU,aAAArU,EAAAqU,eAAAzM,M,SAAgB/H,EAAAqC,OAAK,E,CAI/D,QACIsP,MAAO,CACHtP,MAAO,CACHwF,KAAM,CAAC6N,OAAQC,QACfC,UAAU,IAGlBhM,QAAS,CACL4K,cACIrK,KAAKmF,MAAM,UAAWnF,KAAK9H,MAC/B,ICRR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCGA,IACIoG,MAAO,CAAC,aAAc,iBACtBoJ,WAAY,CAAEgE,QAAOA,IACrB9D,UACI5H,KAAKG,MAAM,cAAcf,IAAMuM,GAC/B3L,KAAK4L,MACT,EACArU,OACI,MAAO,CACHoT,UAAW,GACXxH,OAAQ,EACRpK,KAAM,GACNoS,UAAW,CAAC,EACZH,YAAa,GACbI,iBAAkB,GAE1B,EACAvF,SAAU,KACHI,EAAAA,EAAAA,IAAS,SAAU,CAClB,wBACA,kBACA,qBAGRxG,QAAS,CACLgL,aACIzK,KAAKmF,MAAM,aACf,EACAjO,sBACIkC,QAAQ8L,IAAI,mCACZ,MAAM7J,EAAgB2E,KAAKpG,gBAC3BR,QAAQ8L,IAAIlF,KAAKG,OACjB,MAAM0L,EAAM,CACRtI,OAAQlI,EAAML,SACdwI,OAAQnI,EAAMJ,UACdmI,WAAYpD,KAAK2K,UACjBxH,OAAQnD,KAAKmD,OACb6D,QAAS,GACT8E,eAAgB9L,KAAKhG,sBAAsB2B,GAC3CoQ,UAAW/L,KAAKjH,KAAKV,KAAKQ,GAAYA,EAAQ8C,KAC9CoH,WAAY/C,KAAKmL,UAAUxP,IAEzBrD,QAAYX,EAAgBqU,GAAWH,GACzCvT,EAAIb,IACJwU,MAAM,kCACNjM,KAAKyK,aACLzK,KAAKmF,MAAM,iBAGXnF,KAAK9F,gBAAgB0I,sBACR/K,KAAKqU,MAAM5T,EAAIf,OAG5ByI,KAAK+E,QAAQjM,KAAK,CACd4K,KAAM,WACNlI,MAAOwE,KAAKgF,OAAOxJ,SAGvByQ,MAAM,iCAAiC3T,EAAIf,OAEnD,EAEAL,aACI,MAAO8T,EAAaI,SAA0Be,QAAQC,IAAI,CACtDjV,EAAgBkV,IAChBlV,EAAgBmV,MAGhBtB,EAAYvT,KACZuI,KAAKgL,YAAcA,EAAYzT,MAG/B6T,EAAiB3T,KACjBuI,KAAKoL,iBACDA,EAAiB7T,MAGzByI,KAAKmL,UAAYnL,KAAKoL,iBAAiB,EAC3C,ICnFR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCNA,IACI1D,WAAY,CACR6E,SAAQA,IAEZhV,OACI,MAAO,CACHgT,gBAAoB5Q,EAE5B,EACA8F,QAAS,CAELvI,kBAAkBsV,SACRxM,KAAKG,MAAMqM,GAAMZ,OACvB5L,KAAKuK,WAAaiC,CACtB,EACAlC,eACItK,KAAK+E,QAAQjM,KAAK,CAAE4K,KAAM,iBAE9B,EACA+G,aACIzK,KAAKuK,gBAAa5Q,CACtB,EACA6O,gBACIxI,KAAKmF,MAAM,gBACf,ICpBR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCJA,IACI7G,MAAO,CAAC,mBACRoJ,WAAY,CAAE+E,gBAAe,GAAEC,oBAAmBA,IAClDlF,MAAO,CACHpK,eAAgB,CAAEM,KAAM+J,SAE5BG,UACI5H,KAAKG,MAAM,mBAAmBf,IAAMuM,EACxC,EAEAlM,QAAS,CAEL+I,gBACIxI,KAAKmF,MAAM,kBACf,ICZR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCaO,MAAMwG,GAAW/U,EAAY,sBACvB+V,GAAkB/V,EAAY,6BAE9BgW,GAA+B5V,EACxC,kCAGSqV,GAAgBrV,EAAgB,uBAEhCsV,GAAsBtV,EAAgB,wBAEtCgV,GAAYhV,EAAgB,mBAE5B8U,GAAiB9U,EAAgB,4BAE9C,QACI0M,KAAM,SACNgE,WAAY,CACRmF,aAAY,GACZC,iBAAgB,GAChBC,QAAOA,IAEXxV,OACI,MAAO,CAGH6F,oBAAwBzD,EAExBuE,0BAA0B,EAC1BJ,oBAAoB,EAE5B,EACA5G,gBAEI8I,KAAKG,MAAM,mBAAmBf,IAAMuM,GACpC3L,KAAKG,MAAM,yBAAyBf,IAAMuN,SAEpC3M,KAAKgN,mBAEXhN,KAAKrF,kBACD/D,EAAYgW,IACR5M,KAAKhG,sBAAsB2B,IAEnCqE,KAAKpF,uBAAuBoF,KAAKG,MAAM,iBAEvCH,KAAK9F,gBAAgB0F,SACjBI,KAAKpG,gBACLoG,KAAKnG,YACLmG,KAAK/F,WAEb,EACA4L,SAAU,KACHI,EAAAA,EAAAA,IAAS,SAAU,CAClB,wBACA,kBACA,cACA,aACA,wBAEDC,EAAAA,EAAAA,IAAW,SAAU,CAAC,0BAE7BzG,QAAS,KACFC,EAAAA,EAAAA,IAAa,SAAU,CACtB,qBACA,oBACA,+BAGDC,EAAAA,EAAAA,IAAW,SAAU,CACpB,yBACA,wBACA,qBAGJyB,eAAe/F,EAAegG,GAAY,GACtCrB,KAAKG,MAAM,gBAAgBiB,eACvBpB,KAAKG,MAAM,gBAAgBmD,6BAA6BjI,GACxDgG,EAER,EAEA9D,kBAAkBkG,GAEdzD,KAAKiN,qBACT,EAEAxP,oBAAoB6G,GAEhBtE,KAAKlC,oBAAqB,EAE1BkC,KAAK9B,0BAA2B,CACpC,EAEA+O,sBAEIjN,KAAKlC,oBAAqB,EAE1BkC,KAAK9B,0BAA2B,CACpC,EAEAH,uBAEIiC,KAAK5C,eAAiB,iBAC1B,EAEAS,0BACImC,KAAK5C,eAAiB,qBAC1B,EAEAD,kBAEI6C,KAAK5C,oBAAiBzD,CAC1B,EAEAzC,yBAII,IAAIsE,EAAQvD,EAAM+H,KAAKgF,OAAOxJ,OAE9B,MAAMM,EAAUoR,SAAS1R,EAAM,MAC/B,QAAgB7B,IAAZmC,EAiBA,OAFA1C,QAAQ8L,IAAI,4BACZlF,KAAK+E,QAAQjM,KAAK,CAAE4K,KAAM,kBAhBH,CACvB,MAAMyJ,QAA2BhW,EAC7B2U,GAAiBhQ,GAErB,GAAIqR,EAAS1V,GAAI,CACb,MAAM2V,EAAgBD,EAAS5V,KAC/ByI,KAAKnE,sBAAsB,CACvBC,QAASsR,EACT9R,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,Q,MAGhB5L,QAAQC,MAAM,qC,CAQtB,IAAIoC,EAAOyR,SAAS1R,EAAM,MACrBC,IACDA,EAAO,IAEXuE,KAAK3F,mBAAmBoB,GAExBuE,KAAK7E,uBAAuB,CACxBE,MACIG,EAAMjF,EAAayE,WACnBQ,EAAMjF,EAAa0E,WACb,CACID,SAAUQ,EAAMjF,EAAayE,UAC7BC,UAAWO,EAAMjF,EAAa0E,YAElC,CACID,SACIgF,KAAKhG,sBAAsBqT,gBAC/BpS,UACI+E,KAAKhG,sBAAsBsT,iBAE7ChS,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,SAGhBhF,KAAKpE,iBAAiB,CAClB9B,UAAW0B,EAAMjF,EAAauD,WACxB0B,EAAMjF,EAAauD,WACnBxD,EAAqByD,SAC3BuB,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,SAGhBhF,KAAK+E,QAAQjM,KAAK,CAAE0C,MAAOA,GAC/B,IC7LR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,UCPA,MAAMwM,GAAeC,KAAMC,EAAAA,EAAAA,IAAa,mBAAmBD,EAAEA,KAAIE,EAAAA,EAAAA,MAAcF,GACzEhM,GAAa,CAAEE,MAAO,aACtBD,GAA2B8L,IAAa,KAAmBhL,EAAAA,EAAAA,GAAoB,KAAM,KAAM,kBAAmB,KAC9GZ,GAAa,CAAED,MAAO,aAEtB,SAAUzG,GAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM0U,GAAqBxU,EAAAA,EAAAA,IAAkB,WAE7C,OAAQC,EAAAA,EAAAA,OAAc2G,EAAAA,EAAAA,IAAoB,MAAOb,GAAY,CAC3DC,IACAa,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAoB,MAAOZ,GAAY,GACpDjG,EAAAA,EAAAA,KAAW,IAAO2G,EAAAA,EAAAA,IAAoBqK,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYrR,EAAMoX,UAAWrR,KAC3E3F,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAasU,EAAoB,CACrDvO,MAAO,MACP5D,IAAKuD,EAAQH,GACbzD,MAAO4D,EAAQ4H,KACf/F,QAAUyM,GAAiBpU,EAASuX,cAAczR,IACjD,KAAM,EAAG,CAAC,QAAS,eACpB,OACH,KAAM,CACP,CAACuB,EAAAA,QAA2B1D,GAAnBhE,EAAK4U,eAGpB,CClBA,QACI7C,WAAY,CAAEgE,QAAOA,IACrBnU,OACI,MAAO,CACH4V,SAA+B,GAEvC,EACAjW,sBACU8I,KAAKwN,eACf,EACA/N,QAAS,KACFE,EAAAA,EAAAA,IAAW,SAAU,CAAC,0BACzBzI,sBACI,MAAMiW,QAA2BhW,EAAgB2U,IAC7CqB,EAAS1V,GACTuI,KAAKmN,SAAWA,EAAS5V,KAEzB6B,QAAQC,MAAM,qCAEtB,EAEAkU,cAAczR,GACVkE,KAAKnE,sBAAsB,CACvBC,QAASA,EACTR,OAAQ0E,KAAK+E,QACbxJ,MAAOyE,KAAKgF,SAENzO,EAAauF,QACvBkE,KAAK+E,QAAQjM,KAAK,CAAE4K,KAAM,WAAYlI,MAAO,CAAET,EAAGe,EAAQH,KAE9D,IC9BR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCJA,MAAM8R,GAAqC,CAevC,CACIC,KAAM,IACNhK,KAAM,WACNiK,UAAWC,IAIf,CACIF,KAAM,YACNhK,KAAM,gBACNiK,UAAWE,KAONvS,IAASwS,EAAAA,EAAAA,IAAa,CAC/BL,UACAM,SAASC,EAAAA,EAAAA,QChCb,QAAeC,EAAAA,EAAAA,IAAY,CACvB1U,MAAO,CAAC,EACRsB,QAAS,CAAC,EACVV,UAAW,CAAC,EACZe,QAAS,CAAC,EACVgT,QAAS,CACL5U,OAAQA,KCRT,IAAI6U,IAAMC,EAAAA,EAAAA,IAAUC,GAE3BF,GAAIG,IAAIhT,IACHgT,IAAIC,IACJC,MAAM,O,GCRPC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBhV,IAAjBiV,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASxJ,OAAQgK,IAAK,CACrCL,EAAWH,EAASQ,GAAG,GACvBJ,EAAKJ,EAASQ,GAAG,GACjBH,EAAWL,EAASQ,GAAG,GAE3B,IAJA,IAGIC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAAS3J,OAAQkK,MACpB,EAAXL,GAAsBC,GAAgBD,IAAa9H,OAAOoI,KAAKnB,EAAoBS,GAAGW,OAAM,SAASvX,GAAO,OAAOmW,EAAoBS,EAAE5W,GAAK8W,EAASO,GAAK,IAChKP,EAASU,OAAOH,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASa,OAAOL,IAAK,GACrB,IAAIM,EAAIV,SACE3V,IAANqW,IAAiBZ,EAASY,EAC/B,CACD,CACA,OAAOZ,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASxJ,OAAQgK,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoBzG,EAAI,SAAS6G,GAChC,IAAImB,EAASnB,GAAUA,EAAOoB,WAC7B,WAAa,OAAOpB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAJ,EAAoByB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNAvB,EAAoByB,EAAI,SAAStB,EAASwB,GACzC,IAAI,IAAI9X,KAAO8X,EACX3B,EAAoB4B,EAAED,EAAY9X,KAASmW,EAAoB4B,EAAEzB,EAAStW,IAC5EkP,OAAO8I,eAAe1B,EAAStW,EAAK,CAAEiY,YAAY,EAAMC,IAAKJ,EAAW9X,IAG3E,C,eCPAmW,EAAoBgC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO3Q,MAAQ,IAAI4Q,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBpC,EAAoB4B,EAAI,SAASS,EAAKC,GAAQ,OAAOvJ,OAAOwJ,UAAUC,eAAelC,KAAK+B,EAAKC,EAAO,C,eCKtG,IAAIG,EAAkB,CACrB,IAAK,GAaNzC,EAAoBS,EAAES,EAAI,SAASwB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B/Z,GAC/D,IAKIoX,EAAUyC,EALV/B,EAAW9X,EAAK,GAChBga,EAAcha,EAAK,GACnBia,EAAUja,EAAK,GAGImY,EAAI,EAC3B,GAAGL,EAASoC,MAAK,SAAS9V,GAAM,OAA+B,IAAxBwV,EAAgBxV,EAAW,IAAI,CACrE,IAAIgT,KAAY4C,EACZ7C,EAAoB4B,EAAEiB,EAAa5C,KACrCD,EAAoBO,EAAEN,GAAY4C,EAAY5C,IAGhD,GAAG6C,EAAS,IAAIpC,EAASoC,EAAQ9C,EAClC,CAEA,IADG4C,GAA4BA,EAA2B/Z,GACrDmY,EAAIL,EAAS3J,OAAQgK,IACzB0B,EAAU/B,EAASK,GAChBhB,EAAoB4B,EAAEa,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO1C,EAAoBS,EAAEC,EAC9B,EAEIsC,EAAqBC,KAAK,4BAA8BA,KAAK,6BAA+B,GAChGD,EAAmB9Y,QAAQyY,EAAqBO,KAAK,KAAM,IAC3DF,EAAmB5Y,KAAOuY,EAAqBO,KAAK,KAAMF,EAAmB5Y,KAAK8Y,KAAKF,G,IC/CvF,IAAIG,EAAsBnD,EAAoBS,OAAExV,EAAW,CAAC,MAAM,WAAa,OAAO+U,EAAoB,KAAO,IACjHmD,EAAsBnD,EAAoBS,EAAE0C,E","sources":["webpack://web_chillmap/./src/App.vue?ace1","webpack://web_chillmap/./src/App.vue?847a","webpack://web_chillmap/./src/App.vue","webpack://web_chillmap/./src/interface.ts","webpack://web_chillmap/./src/helper.ts","webpack://web_chillmap/./src/store/geomap.ts","webpack://web_chillmap/./src/pages/MapApp.vue?7192","webpack://web_chillmap/./src/components/MapContainer.vue?8114","webpack://web_chillmap/./src/components/MapContainer.vue?c907","webpack://web_chillmap/./src/components/MapContainer.vue","webpack://web_chillmap/./src/components/FacileFromMarker.vue?beac","webpack://web_chillmap/./src/stylecomponents/ParamsList.vue?17b5","webpack://web_chillmap/./src/stylecomponents/ParamsList.vue?be16","webpack://web_chillmap/./src/stylecomponents/ParamsList.vue","webpack://web_chillmap/./src/components/FacileFromMarker.vue?12bc","webpack://web_chillmap/./src/components/FacileFromMarker.vue","webpack://web_chillmap/./src/components/OverBox.vue?b415","webpack://web_chillmap/./src/components/DetailFromPlace.vue?2a9a","webpack://web_chillmap/./src/components/DetailFromPlace.vue?7846","webpack://web_chillmap/./src/components/DetailFromPlace.vue","webpack://web_chillmap/./src/components/ExtraFeaturesWindow.vue?4d10","webpack://web_chillmap/./src/components/AddPlace.vue?d58b","webpack://web_chillmap/./src/stylecomponents/VButton.vue","webpack://web_chillmap/./src/stylecomponents/VButton.vue?c308","webpack://web_chillmap/./src/components/AddPlace.vue?c678","webpack://web_chillmap/./src/components/AddPlace.vue","webpack://web_chillmap/./src/components/ExtraFeaturesWindow.vue?fa71","webpack://web_chillmap/./src/components/ExtraFeaturesWindow.vue","webpack://web_chillmap/./src/components/OverBox.vue?fc96","webpack://web_chillmap/./src/components/OverBox.vue","webpack://web_chillmap/./src/pages/MapApp.vue?c57a","webpack://web_chillmap/./src/pages/MapApp.vue","webpack://web_chillmap/./src/pages/SelectChenel.vue?85a4","webpack://web_chillmap/./src/pages/SelectChenel.vue?54d5","webpack://web_chillmap/./src/pages/SelectChenel.vue","webpack://web_chillmap/./src/router.ts","webpack://web_chillmap/./src/store/index.ts","webpack://web_chillmap/./src/main.ts","webpack://web_chillmap/webpack/bootstrap","webpack://web_chillmap/webpack/runtime/chunk loaded","webpack://web_chillmap/webpack/runtime/compat get default export","webpack://web_chillmap/webpack/runtime/define property getters","webpack://web_chillmap/webpack/runtime/global","webpack://web_chillmap/webpack/runtime/hasOwnProperty shorthand","webpack://web_chillmap/webpack/runtime/jsonp chunk loading","webpack://web_chillmap/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createBlock(_component_router_view))\n}","\n\nexport default {\n    // // Компоненты\n    // components: {},\n    // // Аргументы\n    // //props: {},\n    // // Переменные\n    // data() {\n    //     return {\n    //         // ИмяПеременной: ЗначениеПоУмолчанию,\n    //     };\n    // },\n    // // Методы\n    // methods: {},\n};\n","import { render } from \"./App.vue?vue&type=template&id=ae8d07dc&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=ae8d07dc&lang=scss\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// ------------ UrlGet ---------------\n// Режим отображения карты, или места\nexport enum UrlGetParamsTypeView {\n    main_map = \"mm\",\n}\n\n// Все возможные GET параметры в URL\nexport enum UrlGetParams {\n    // Широта\n    latitude = \"x\",\n    // Долгота\n    longitude = \"y\",\n    // Приближение карты\n    zoom = \"z\",\n    // Режим отображения\n    type_view = \"v\",\n    // Идентификатор канала\n    channel = \"c\",\n    // Идентификатор выбранного места(маркера)\n    mark = \"m\",\n}\n// -------------------------------------------------\n\n// ----- geomap ---------------------------------------- //\nexport interface TCoord {\n    // широта\n    latitude: number;\n    // долгота\n    longitude: number;\n}\n\nexport interface TTypePlaceObj {\n    // Уникальный идентификатор типа\n    id: number;\n    self_url: string;\n    // Имя типа\n    name: string;\n    // Путь к иконке маркера\n    img_url: string;\n    // Широта фота в 0.3\n    img_size_w: number;\n    // Высота фота в 0.3\n    img_size_h: number;\n}\n\nexport interface TWhatTodoObj {\n    // Чем можно заняться в этом места\n    id: number;\n    self_url: string;\n    todo: string;\n}\n\nexport interface TArialObj {\n    // Уникальный идентификатор ареала\n    id: number;\n    self_url: string;\n    name: string;\n}\n\nexport interface TChannelGeomapObj {\n    // Уникальный идентификатор канала\n    id: number;\n    self_url: string;\n    name: string;\n    arial_in_map: number;\n    arial_in_map_obj: TArialObj;\n    shard: number;\n    // Координаты по умолчанию для группы X\n    default_coord_x: string;\n    // Координаты по умолчанию для группы Y\n    default_coord_y: string;\n}\n\nexport interface TGeomap {\n    // Уникальный идентификатор места\n    id: string;\n    self_url: string;\n    // Координаты места Широта\n    cord_x: string;\n    // Координаты места Долгота\n    cord_y: string;\n    // Короткое название места. Максимальная длинна 16 символов\n    simpl_name: string;\n    // Рейтинг места\n    rating: number;\n    // Адрес места\n    address: string;\n    // Id канала к которому принадлежит место\n    channel_geomap: number;\n    channel_geomap_obj: TChannelGeomapObj;\n    // Чем можно заняться в этом месте\n    what_todo: number[];\n    what_todo_obj: TWhatTodoObj[];\n    // Тип места\n    type_place: number;\n    type_place_obj: TTypePlaceObj;\n}\n\n// Идентификатор типа места\ntype TIdTypePlace = string;\n\nexport interface TPlace {\n    [key: TIdTypePlace]: Omit<\n        TGeomap,\n        | \"what_todo_obj\"\n        | \"type_place_obj\"\n        | \"channel_geomap\"\n        | \"channel_geomap_obj\"\n    >[];\n}\nexport interface TSettingsPlace {\n    [key: TIdTypePlace]: TTypePlaceObj;\n}\nexport interface TPlaces {\n    place: TPlace;\n    settings: TSettingsPlace;\n}\nexport interface TChannelGeomapPlace extends TChannelGeomapObj {\n    places: TPlaces;\n}\n\n// --------------------\nexport interface TPropertiesMark extends TGeomap { }\nexport interface Tchannel_geomapJson { }\n\n// ------------------------------------------------- //\n\n// ------------ public_place_details -----------\n\n// День.Месяц.Год Час:Минуты\nexport type DateTime = string;\n// Час:Минуты\nexport type Time = string;\n// Когда это место возможно посетить\nexport enum EWhenPossibleVisit {\n    StaticWorkSchedule = \"Постоянный график работы\",\n    OneTimeTemporaryEvent = \"Одноразовое временно событие\",\n    PeriodicPlace = \"Переодическое место\",\n}\n// Средняя людность:\nexport enum EAveragePopulation {\n    UncomfortableFrequentCrowding = \"Дискомфортная частая людность\",\n    UncomfortableFrequentCrowdingExceptWeekends = \"Дискомфортная людность по выходным и праздникам, но в рабочие дни комфортная\",\n    ComfortableCrowd = \"Комфортная людность\",\n    Privacy = \"Уединение\",\n    Loneliness = \"Одиночество\",\n}\n// День недели\nexport enum Eweekday {\n    Monday = \"понедельник\",\n    Tuesday = \"вторник\",\n    Wednesday = \"среда\",\n    Thursday = \"четверг\",\n    Friday = \"пятница\",\n    Saturday = \"суббота\",\n    Sunday = \"воскресенье\",\n}\n// Валюта\nexport enum EAverageCostVisit {\n    RUB = \"руб\",\n    USD = \"доллар\",\n    EUR = \"евро\",\n    CNY = \"юань\",\n}\n\nexport interface TInternetСontacts {\n    phones?: string[];\n    website?: string;\n    tg?: string;\n    vk?: string;\n    any_social?: string[];\n    yandex_map?: string;\n    any_link?: string[];\n}\n\nexport interface Tpublic_place_details extends TPropertiesMark {\n    // Когда это место возможно посетить\n    WhenPossibleVisit: {\n        type: EWhenPossibleVisit;\n        data: {\n            // Дни недели в которые это место работает.\n            // Если в какой-то день недели это место не работает, то это день не нужно указывать\n            // Если у этого места нет графика работы, то не нужно указывать ключ \"weekday\"\n            weekday?: {\n                [key in Eweekday]: {\n                    start: Time;\n                    end: Time;\n                };\n            };\n            // Начала периода: День.Месяц.Год Час:Минуты\n            start_period?: DateTime;\n            // Конец периода: День.Месяц.Год Час:Минуты\n            end_period?: DateTime;\n            // Дата(ы) начала события.\n            dates?: DateTime[];\n        };\n    };\n    // Средняя стоимость посещения.\n    AverageCostVisit: {\n        currency: EAverageCostVisit;\n        value: number;\n    };\n    // Средняя людность:\n    AveragePopulation: EAveragePopulation;\n    // Это место в интернете\n    InternetСontacts: TInternetСontacts;\n    // У скольких пользователей, это место добавлено в избранные.\n    FavoritesCountMore: number;\n}\n\n// ------------\n","import { TPropertiesMark } from \"./interface\";\n\n// Если в URL нет `@/`, то оставляет его без изменений\nexport function ParseUrlSrc(url_src: string) {\n    // @ts-ignore\n    return url_src.replace(\"@/\", ENV_default_host_to_src);\n}\n\n// Если в URL нет `@/`, то оставляет его без изменений\nexport function ParseUrlBackend(url_src: string) {\n    // @ts-ignore\n    return url_src.replace(\"@/\", ENV_default_host_to_backend);\n}\n\n// Интерфейс для данных, полученных из URL\nexport interface TFromUrl {\n    data: any;\n    ok: boolean;\n    status: number;\n}\n\n// Загрузка данных по указанному URL методом GET\nexport async function DownloadFromUrl(url_src: string): Promise<TFromUrl> {\n    const response = await fetch(url_src, {\n        method: \"GET\",\n    });\n    return { data: await response.json(), ok: response.ok, status: response.status };\n}\n\n// Отправка данных методом POST в формате JSON на указанный URL\nexport async function PostJsonFromUrl(url_src: string, data: any): Promise<TFromUrl> {\n    const response: Response = await fetch(url_src, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            \"Accept\": \"application/json\"\n        }\n    });\n    return { data: await response.text(), ok: response.ok, status: response.status };\n}\n\n// Копирование объекта\nexport function clone(value) {\n    if (Array.isArray(value)) {\n        return value.map(clone);\n    } else if (value && typeof value === \"object\") {\n        const res = {};\n        for (const key in value) {\n            res[key] = clone(value[key]);\n        }\n        return res;\n    } else {\n        return value;\n    }\n}\n\n// Конвертирование id в понятные имена для whattodo\nexport function whattodoIdFromName(newValue: TPropertiesMark): string[] {\n    let whattodo: string[] = [];\n    newValue.what_todo_obj.forEach(element => {\n        whattodo.push(element.todo)\n    });\n    return whattodo;\n}\n\n// Функция для получения адреса по координатам\nexport async function getAddress(lat: string, lon: string): Promise<string> {\n    const response = await DownloadFromUrl(\n        `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lon}`\n    );\n    if (response.ok) {\n        return response.data.display_name;\n    } else {\n        console.error(`Ошибка при получении адреса по координатам: ${lat} ${lon}`);\n    }\n}\n","import {\n    TCoord,\n    TChannelGeomapPlace,\n    TPropertiesMark,\n    UrlGetParams,\n    UrlGetParamsTypeView,\n    TSettingsPlace,\n    TChannelGeomapObj,\n} from \"@/interface\";\nimport { ParseUrlSrc, clone } from \"@/helper\";\n\nexport const geomap = {\n    // Доступные переменные в хранилище\n    state() {\n        return {\n            // Поверхностная информация о местах\n            geomap_json: <TChannelGeomapPlace>{},\n            // Настройка типов мест\n            settings_type_place: <TSettingsPlace>{},\n            // Все каналы данные\n            // channel_geomap_json: <Tchannel_geomapJson>{},\n            // Текущие выбранное место\n            select_PropertiesMark: <TPropertiesMark>undefined,\n            // Координаты на которое совершено нажатие, или фокусировка\n            coordinat_click: <TCoord>{},\n            // Текущие приближение карты\n            select_zoom: <number>16,\n            // Режим просмотра\n            type_view: <string>UrlGetParamsTypeView.main_map,\n            // Текущий id канала для просмотра\n            select_channel_geomap: <TChannelGeomapObj>undefined,\n            // Ссылка для скачивания geomap\n            url_geomap: <string>undefined,\n            // Ссылка на компонент с картой MapContainer\n            RefMapContainer: <object>undefined\n        };\n    },\n    mutations: {\n        // ----------------\n        AUpdate_select_channel(state, newValue: number) {\n            state.select_channel_geomap = newValue;\n        },\n        Update_select_zoom(state, newValue: number) {\n            state.select_zoom = newValue;\n        },\n        AUpdate_coordinat_click(state, newValue: TCoord) {\n            state.coordinat_click = newValue;\n        },\n        AUpdate_type_view(state, newValue: string) {\n            state.type_view = newValue;\n        },\n        // ----------------\n        Update_geomap_json(state, newValue: TChannelGeomapPlace[]) {\n            state.geomap_json = newValue;\n        },\n        Update_settings_type_place(state, newValue: TSettingsPlace) {\n            state.settings_type_place = newValue;\n        },\n        AUpdate_select_PropertiesMark(state, newValue: TPropertiesMark) {\n            state.select_PropertiesMark = newValue;\n        },\n        Update_url_geomap(state, newValue: string) {\n            state.url_geomap = ParseUrlSrc(newValue);\n        },\n        Update_RefMapContainer(state, newValue: object) {\n            state.RefMapContainer = newValue\n        }\n    },\n    getters: {\n        // Координаты фокусировки\n        coordinat_click_cord: state => {\n            const c = <TCoord | undefined>state.coordinat_click;\n            if (c) {\n                return [c.latitude, c.longitude];\n            }\n            return [];\n        }\n    },\n\n    actions: {\n        // Обновить координаты в фокуса\n        Update_coordinat_click(\n            { state, commit },\n            { coord, router, route }: { coord: TCoord; router: any; route: any }\n        ) {\n            commit(\"AUpdate_coordinat_click\", coord);\n            // Обновляем GET параметры в URL\n            let query = clone(route.query);\n            query[UrlGetParams.latitude] = coord.latitude;\n            query[UrlGetParams.longitude] = coord.longitude;\n            query[UrlGetParams.zoom] = state.select_zoom;\n            query[UrlGetParams.type_view] = UrlGetParamsTypeView.main_map;\n            if (state.select_PropertiesMark) {\n                query[UrlGetParams.mark] = state.select_PropertiesMark.id;\n            }\n            router.push({ query: query });\n        },\n        Update_type_view(\n            { commit },\n            {\n                type_view,\n                router,\n                route,\n            }: { type_view: string; router: any; route: any }\n        ) {\n            commit(\"AUpdate_type_view\", type_view);\n            // Обновляем GET параметры в URL\n            let query = clone(route.query);\n            query[UrlGetParams.type_view] = type_view;\n            router.push({ query: query });\n        },\n        Update_select_channel(\n            { commit },\n            {\n                channel,\n                router,\n                route,\n            }: { channel: number; router: any; route: any }\n        ) {\n            commit(\"AUpdate_select_channel\", channel);\n            let query = clone(route.query);\n            query[UrlGetParams.channel] = channel;\n            router.push({ query: query });\n        },\n        Update_select_PropertiesMark(\n            { commit },\n            {\n                mark,\n                router,\n                route,\n            }: { mark: TPropertiesMark; router: any; route: any }\n        ) {\n            commit(\"AUpdate_select_PropertiesMark\", mark);\n            let query = clone(route.query);\n            query[UrlGetParams.mark] = mark.id;\n            router.push({ query: query });\n        },\n    },\n    // Локальное пространство имен. Позволяет обращаться к мутации через `ИмяМодуляХранилища/ФункцияМутации`\n    namespaced: true,\n};\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"main_box\" }\nconst _hoisted_2 = { class: \"over_box\" }\nconst _hoisted_3 = { class: \"up_box\" }\nconst _hoisted_4 = { class: \"down_box\" }\nconst _hoisted_5 = {\n  ref: \"d_show_map_detail\",\n  class: \"d_show_map_detail\"\n}\nconst _hoisted_6 = { class: \"map_coord_click\" }\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"map_facile_div\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_OverBox = _resolveComponent(\"OverBox\")!\n  const _component_MapContainer = _resolveComponent(\"MapContainer\")!\n  const _component_FacileFromMarker = _resolveComponent(\"FacileFromMarker\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_OverBox, {\n        onHidden_over_box: $options.hidden_over_box,\n        view_component: $data.view_component\n      }, null, 8, [\"onHidden_over_box\", \"view_component\"])\n    ], 512), [\n      [_vShow, $data.view_component]\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createVNode(_component_MapContainer, {\n        ref: \"MapContainer\",\n        onOnMarkerClick: $options.HandleMarkerClick,\n        onOnEmptyMapClick: $options.HandleEmptyMapClick\n      }, null, 8, [\"onOnMarkerClick\", \"onOnEmptyMapClick\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"show_map_detail\",\n          type: \"image\",\n          ref: \"show_map_detail\",\n          onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.ShowExtraFeaturesWindow && $options.ShowExtraFeaturesWindow(...args)))\n        }, null, 512), [\n          [_vShow, $data.is_show_map_detail]\n        ]),\n        _withDirectives(_createElementVNode(\"input\", {\n          class: \"show_map_detail\",\n          type: \"image\",\n          ref: \"show_map_detail_place\",\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => ($options.ShowPlaceDetailsInfo && $options.ShowPlaceDetailsInfo(...args)))\n        }, null, 512), [\n          [_vShow, !$data.is_show_map_detail]\n        ])\n      ], 512),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"input\", {\n          type: \"text\",\n          value: _ctx.coordinat_click_cord,\n          id: \"map_coord_click_input\",\n          placeholder: \"широта,долгота\",\n          readonly: \"\"\n        }, null, 8, _hoisted_7)\n      ]),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_8, [\n        _createVNode(_component_FacileFromMarker, { ref: \"map_facile\" }, null, 512)\n      ], 512), [\n        [_vShow, $data.is_show_FacileFromMarker]\n      ])\n    ])\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { style: {\"width\":\"100%\",\"height\":\"100%\"} }\nconst _hoisted_2 = {\n  ref: \"map-root\",\n  style: {\"width\":\"100%\",\"height\":\"100%\"}\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, null, 512)\n  ]))\n}","\n//  Импорт виджетов\nimport View from \"ol/View\";\nimport olMap from \"ol/Map\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transform } from \"ol/proj\";\nimport BaseLayer from \"ol/layer/Base\";\nimport Collection from \"ol/Collection\";\n// Импорт стилей для карты\nimport \"ol/ol.css\";\nimport { Point } from \"ol/geom\";\nimport Vector_source from \"ol/source/Vector\";\nimport Vector_layer from \"ol/layer/Vector\";\nimport Feature from \"ol/Feature\";\nimport Style from \"ol/style/Style\";\nimport Text from \"ol/style/Text\";\nimport Icon from \"ol/style/Icon\";\nimport { toSize } from \"ol/size\";\nimport Layer from \"ol/layer/Layer\";\nimport Fill from \"ol/style/Fill\";\nimport { DownloadFromUrl, ParseUrlSrc, TFromUrl } from \"@/helper\";\nimport Stroke from \"ol/style/Stroke\";\nimport MapEvent from \"ol/MapEvent\";\nimport MapBrowserEvent from \"ol/MapBrowserEvent\";\nimport {\n    TCoord,\n    TChannelGeomapPlace,\n    TGeomap,\n    TSettingsPlace,\n} from \"@/interface\";\nimport { mapState, mapActions, mapMutations, mapGetters } from \"vuex\";\n\n// Картинка маркера по умолчанию\nconst imgPont = ParseUrlSrc(\"@/img/default_point.png\");\n// Картинка для маркера выбранных координат на карте\nconst imgSelect = ParseUrlSrc(\"@/img/select.png\");\n\nexport default {\n    emits: [\n        // Нажатие на маркер\n        \"onMarkerClick\",\n        // Нажатие на карту(кроме нажатия на маркер)\n        \"onEmptyMapClick\",\n    ],\n    data() {\n        return {\n            // Основной объект карты\n            map: undefined,\n            // Основной слой на карте\n            mainLayer: new TileLayer({\n                // https://openlayers.org/en/latest/apidoc/module-ol_layer_Tile-TileLayer.html\n                // Имя класса для слоя\n                className: \"mainLayer\",\n                // Источник для этого слоя.\n                source: new OSM(),\n                // Предварительная загрузка фрагментов карты, чтобы не было серых квадратов при перемещение по карте\n                preload: 4,\n                // Этот видимый слой\n                visible: true,\n            }),\n            // Слой на котором храниться координаты, на которые было совершено нажатие,\n            // или если в кукую-то точку на карет было автоматическое перемещение.\n            selectLayer: new Vector_layer({\n                className: \"selectLayer\",\n                source: new Vector_source(),\n                style: new Style({\n                    // Иконка маркера\n                    image: new Icon({\n                        // Ссылка на URL изображения\n                        src: imgSelect,\n                        // Масштаб изображения = по умолчанию [1,1]\n                        scale: toSize([0.4, 0.4]),\n                    }),\n                }),\n                visible: true,\n            }),\n            // Слой для маркеров на карте.\n            markersLayer: new Vector_layer({\n                // Имя класса\n                className: \"markersLayer\",\n                source: new Vector_source(),\n                style: new Style({\n                    // Иконка маркера\n                    image: new Icon({\n                        // Ссылка на URL изображения\n                        src: imgPont,\n                        // Масштаб изображения = по умолчанию [1,1]\n                        scale: toSize([0.3, 0.3]),\n                    }),\n                }),\n                visible: true,\n            }),\n            // Объект в котором будет храниться маркер, это нужно для того чтобы можно было удалять маркеры с прошлого нажатия\n            coordinat_click_obj_mark: undefined,\n        };\n    },\n\n    methods: {\n        ...mapMutations(\"geomap\", [\n            \"Update_select_zoom\",\n            \"Update_geomap_json\",\n            \"Update_settings_type_place\",\n        ]),\n\n        ...mapActions(\"geomap\", [\n            \"Update_coordinat_click\",\n            \"Update_select_PropertiesMark\",\n            \"Update_coordinat_click\",\n        ]),\n\n        // Инициализировать карту. Используется такой вариант для того чтобы дождаться async mounted`\n        _initMap(\n            default_coord: TCoord,\n            default_zoom: number,\n            default_url_geomap: string\n        ) {\n            /*\n                default_coord: Координаты на которые происходит фокусировки по умолчанию\n                default_zoom: Приближение карты по умолчанию\n                default_url_geomap: URL для скачивания geomap\n            */\n\n            // Инициализация объект с картой\n            this.map = new olMap({\n                // HTML объект в который вставиться карта\n                target: this.$refs[\"map-root\"],\n                // Список слоев на карте\n                layers: [\n                    // Основной слой на карте\n                    this.mainLayer,\n                    // Слой на кортом храниться текущие нажатые координаты\n                    this.selectLayer,\n                ],\n                // Начальные положение на карте\n                view: new View({\n                    // Приближение карты по умолчанию\n                    zoom: default_zoom,\n                    // Положение по умолчанию\n                    center: fromLonLat([\n                        default_coord.longitude,\n                        default_coord.latitude,\n                    ]),\n                    // Установите, должен ли вид разрешать промежуточные уровни масштабирования.\n                    constrainResolution: true,\n                    // проекция. По умолчанию используется Сферический Меркатор.\n                    projection: \"EPSG:3857\",\n                }),\n            });\n            // Поставить маркер на сфокусированные координаты\n            this.setSelectMarker(default_coord);\n            // Добавляем на карту слой с маркерами\n            this.map.addLayer(this.markersLayer);\n            // Про типы обработчиков событий https://gis.stackexchange.com/questions/252946/what-are-the-possible-listeners-and-event-types-for-an-openlayers-map-ol-map\n            // Добавить обработчик событий на нажатие на карту\n            this.map.on(\"click\", this.HandleClickMap); // MapBrowserEvent<UIEvent>\n            // Добавить обработчик передвижения мыши по карте\n            this.map.on(\"pointermove\", this.HandlePointermove); // MapBrowserEvent\n            // Обработка изменение маштака карты\n            this.map.on(\"moveend\", this.HandleZoom); // MapEvent\n            // Скачиваем и обновляем geomap\n            this.updateSelectGeomap(default_url_geomap);\n            /////////////////// Тестовый маркер\n            // this.setMarkers({ longitude: 30.1734, latitude: 59.8587 });\n            // this.setMarkers({ longitude: 30.1734, latitude: 59.8588 }, undefined, {\n            //     imgUrl: imgPont2,\n            //     imgSize: [0.4, 0.4],\n            // });\n            ///////////////////\n        },\n        // ----------- Основные функции для работы с Openlayers -------------\n        // Приблизить карту\n        ZoomMap() {\n            this.Update_select_zoom(this.select_zoom + 1);\n        },\n        // отдалить карту\n        UnZoomMap() {\n            this.Update_select_zoom(this.select_zoom - 1);\n        },\n        // Сфокусировать карту в указанные координаты\n        setCoordinates(coord: TCoord | undefined, IfSetMark = false) {\n            // coord: Координаты куда сфокусироваться\n            // IfSetMark: True=Установит маркер в указанные координаты\n            if (coord) {\n                this.view_select.setCenter(\n                    fromLonLat([coord.longitude, coord.latitude])\n                );\n                if (IfSetMark) {\n                    this.setSelectMarker(coord);\n                }\n            }\n        },\n        // Установить маркер в указанные координаты на карте\n        setMarkers(\n            coord: TCoord | undefined,\n            propsFromFeature: { [x: string]: any } = undefined,\n            {\n                imgUrl = <string>undefined,\n                imgSize = <[number, number]>[1, 1],\n                labelText = <string>\"12:Пивная\",\n            } = {}\n        ) {\n            // coord: Координаты куда поставить маркер\n            // imgUrl: Путь к изображению маркера\n            // sizeImg: Масштаб для маркера. [1,1] = Исходный размер изображения\n            // propsFromFeature: Параметры которые сохраняться в маркер, их можно будет получить через - `marker.getProperties()['ИмяКлюча'];`\n            // labelText16size: Название места. Максимальная длинна 16 символов\n            /*\n                this.setMarkers({ longitude: 30.1734, latitude: 59.8587 });\n            */\n            if (coord) {\n                // Создаем маркер\n                let marker = new Feature({\n                    geometry: new Point(\n                        fromLonLat([coord.longitude, coord.latitude])\n                    ),\n                });\n                if (imgUrl) {\n                    // Если передано изображение, то отображаем его, а не то что задано по умолчанию.\n                    marker.setStyle(\n                        new Style({\n                            // Иконка маркера\n                            image: new Icon({\n                                // Ссылка на URL изображения\n                                src: imgUrl,\n                                // Масштаб изображения = по умолчанию [1,1]\n                                scale: toSize(imgSize),\n                            }),\n                            // Стили для текста https://openlayers.org/en/latest/apidoc/module-ol_style_Text-Text.html\n                            text: new Text({\n                                // Текст\n                                text: labelText,\n                                // Размер текста\n                                scale: [1.3, 1.3],\n                                // Стиль текста\n                                // font: \"10px sans-serif bold\",\n                                // Отступ с верху\n                                offsetY: 28,\n                                // Цвет фона\n                                // backgroundFill: new Fill({ color: \"#ebcb8b\" }),\n                                // Цвет обводки текста\n                                stroke: new Stroke({\n                                    color: \"#fff\",\n                                    width: 3,\n                                }),\n                                placement: \"line\",\n                            }),\n                        })\n                    );\n                }\n                if (propsFromFeature) {\n                    // Сохранить параметры в маркер\n                    /*\n                    Получить параметры из маркера\n\n                    >>> marker.getProperties()['ИмяКлюча'];\n                    */\n                    marker.setProperties(propsFromFeature);\n                }\n                // Добавляем его на карту\n                this.markersLayer.getSource().addFeature(marker);\n            }\n        },\n\n        _setMarkersFromGeomap(place: TGeomap) {\n            /* Добавить маркер на карту из объекта Geomap */\n            const settings_type_place = <TSettingsPlace>(\n                this.settings_type_place\n            );\n            const item = settings_type_place[place.type_place];\n            const style = {\n                imgUrl: ParseUrlSrc(item.img_url),\n                imgSize: [item.img_size_w, item.img_size_h],\n            };\n            // Формируем краткую информацию о месте. Рейтинг:Имя\n            style[\"labelText\"] = `${\n                // Максимум 12 баллов\n                place.rating % 13\n            }:${\n                // Максимальная длинна названия 16 символов\n                place.simpl_name.substring(0, 16)\n            }`;\n            const coord = this.RefMapContainer._parseCoordFromOpenstreetmap(\n                `${place.cord_x},${place.cord_y}`\n            );\n            // Своиства которы будут храниться в маркере\n            let PropertiesMark = place;\n            PropertiesMark[\"name_marker\"] = item.name;\n            PropertiesMark[\"coord\"] = [coord.latitude, coord.longitude];\n            // 2.2.1 Устанавливаем маркеры\n            this.setMarkers(coord, PropertiesMark, style);\n        },\n        // Установить маркер на место в которые было совершено нажатие\n        setSelectMarker(coord: TCoord | undefined) {\n            // longitude: долгота\n            // latitude: широта\n            /*\n                this.setSelectMarker({ longitude: 30.1734, latitude: 59.8587 });\n            */\n            if (coord) {\n                // Удаляем маркер с прошлого нажатия\n                this.selectLayer\n                    .getSource()\n                    .removeFeature(this.coordinat_click_obj_mark);\n                // Создаем маркер\n                var marker = new Feature(\n                    new Point(fromLonLat([coord.longitude, coord.latitude]))\n                );\n                // Обновляем маркер нажатия на новый\n                this.coordinat_click_obj_mark = marker;\n                // Добавляем маркер на карту\n                this.selectLayer.getSource().addFeature(marker);\n            }\n        },\n        // Загрузить geomap_ИмяТочкиРадиусов.json и обновить все маркеры мест на карте, в соответствие с этим файлом\n        async updateSelectGeomap(url_download: string) {\n            const geomap: TFromUrl = await DownloadFromUrl(url_download);\n            if (geomap.ok) {\n                const geomap_json = <TChannelGeomapPlace>geomap.data;\n                // Убираем с карты маркеры от прошлых места\n                this.ClearMarkers(this.markersLayer);\n                // Заносим Geomap в глобальное хранилище\n                this.Update_geomap_json(geomap_json);\n                // Отображаем места на карте\n                this.ShowPlaceFromExternal(this.markersLayer, this.geomap_json);\n            } else {\n                console.error(\"Ошибка: Ответ geomap пустой\");\n            }\n        },\n        // Отчистить указный слой от всех маркеров\n        ClearMarkers(layer: Vector_layer<Vector_source>) {\n            layer.getSource().clear();\n        },\n        // Отобразить места на карте из формата `Tgeomap`\n        ShowPlaceFromExternal(layer: Layer, self_geomap: TChannelGeomapPlace) {\n            /*\n                layer: На какой слой добавить маркеры.\n                self_geomap: Объект с данными имеющий координаты и стили для маркеров.\n            */\n\n            // 1. Показать слой\n            layer.setVisible(true);\n            // Получить настройки для типов и сохранить их  в store\n            const settings_type_place = self_geomap.places.settings;\n            this.Update_settings_type_place(settings_type_place);\n            //! Перебрать места и отобразить их на месте\n            for (let item in self_geomap.places.place) {\n                self_geomap.places.place[item].forEach((element) => {\n                    this._setMarkersFromGeomap(element);\n                });\n            }\n        },\n        //  ---------- Обработчики событий на карте  ------------------ //\n\n        // Проверка пересечения события с маркером\n        _CheckIntersectionsMarker(evt: MapBrowserEvent<UIEvent>) {\n            // return: True=Есть пересечение с маркером. False=Нет пересечения с маркером\n            let res = false;\n            // Обнаружьте объекты, которые пересекают пиксель в окне просмотра, и выполните обратный вызов с каждой пересекающейся функцией\n            this.map.forEachFeatureAtPixel(\n                // Пиксили в которых искать пересечение с объектом\n                evt.pixel,\n                // Обработка пересечения с маркером\n                (feat: Feature, layer: BaseLayer) => {\n                    // Если пересечение с элементом у которого className=\"markersLayer\" (слой с маркерами)\n                    if (layer.getClassName() == \"markersLayer\") {\n                        this.HandleMarkerHover(evt, feat);\n                        res = true;\n                    }\n                }\n            );\n            return res;\n        },\n        // Обработки нажатий на карту\n        HandleClickMap(evt: MapBrowserEvent<UIEvent>): any {\n            // Если было пересечение с маркером то, не изменяем положение курсора на карте\n            if (this._CheckIntersectionsMarker(evt)) {\n                return null;\n            }\n            // Конвертировать координаты в широту и долготу\n            const coord = transform(\n                evt.coordinate,\n                \"EPSG:3857\",\n                \"EPSG:4326\"\n            ).reverse();\n            // Сохраняем нажатые координаты в глобальное хранилище\n            this.Update_coordinat_click({\n                coord: {\n                    latitude: coord[0],\n                    longitude: coord[1],\n                },\n                router: this.$router,\n                route: this.$route,\n            });\n            if (coord) {\n                // Устанавливаем маркер в координаты нажатия\n                this.setSelectMarker(\n                    this._parseCoordFromOpenstreetmap(coord.toString())\n                );\n            }\n            console.log(\"Нажатие по карте, в координаты: \", coord);\n            this.$emit(\"onEmptyMapClick\", evt);\n        },\n        // Обработчик передвижения мыши по карте\n        HandlePointermove(evt: MapBrowserEvent<UIEvent>) {\n            // Проверить пересечения с маркером\n            this._CheckIntersectionsMarker(evt);\n        },\n        // Обработка наведения миши на маркер\n        HandleMarkerHover(evt: MapBrowserEvent<UIEvent>, feat: Feature) {\n            // Если это наведение на маркер\n            if (evt.type == \"pointermove\") {\n                console.debug(\"Наведение на маркер\");\n            }\n            // Если это нажатие на маркер\n            if (evt.type == \"click\") {\n                this.HandleMarkerClick(feat);\n            }\n        },\n        // Обработка нажатия на маркер\n        HandleMarkerClick(feat: Feature) {\n            // Кастомные свойства у нажатого маркера\n            const PropertiesMark = feat.getProperties();\n            // Сохраняем в ГХ текущие выбранное место;\n            this.Update_select_PropertiesMark({\n                mark: PropertiesMark,\n                router: this.$router,\n                route: this.$route,\n            });\n            // Координаты фокусировки равны = координатам нажатого места\n            this.Update_coordinat_click({\n                coord: {\n                    latitude: PropertiesMark.coord[0],\n                    longitude: PropertiesMark.coord[1],\n                },\n                router: this.$router,\n                route: this.$route,\n            });\n            console.log(\"Нажатие на маркер\", PropertiesMark);\n            // Вызываем событие нажатия на маркер\n            this.$emit(\"onMarkerClick\", PropertiesMark);\n        },\n        // Обработка изменение масштаба карты\n        HandleZoom(evt: MapEvent) {\n            this.Update_select_zoom(this.view_select.values_.zoom);\n        },\n        //-------------------------------------------------------------\n\n        // ----- Утилиты -----------------------------\n        // Конвертировать строку координат из https://www.openstreetmap.org/\n        _parseCoordFromOpenstreetmap(str_coord: string): TCoord | undefined {\n            if (str_coord != \"\") {\n                const l = str_coord.split(\",\").reverse();\n                if (l.length == 2) {\n                    return {\n                        longitude: parseFloat(l[0]),\n                        latitude: parseFloat(l[1]),\n                    };\n                }\n            } else {\n                console.warn(\"Вы не указали координаты\");\n            }\n        },\n    },\n    computed: {\n        // View у карты\n        view_select(): View {\n            return this.map.getView();\n        },\n        // Получить все слои на карте\n        layers_select(): Collection<BaseLayer> {\n            return this.map.getLayers();\n        },\n\n        ...mapState(\"geomap\", [\n            \"select_zoom\",\n            \"settings_type_place\",\n            \"RefMapContainer\",\n            \"geomap_json\",\n        ]),\n        ...mapGetters(\"geomap\", [\"coordinat_click_cord\"]),\n    },\n};\n","import { render } from \"./MapContainer.vue?vue&type=template&id=10e78878&ts=true\"\nimport script from \"./MapContainer.vue?vue&type=script&lang=ts\"\nexport * from \"./MapContainer.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-00c3661d\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"map_facile\" }\nconst _hoisted_2 = { class: \"cel name_marker\" }\nconst _hoisted_3 = { class: \"img\" }\nconst _hoisted_4 = { ref: \"img_name_marker\" }\nconst _hoisted_5 = { class: \"text\" }\nconst _hoisted_6 = { class: \"cel simpl_name\" }\nconst _hoisted_7 = { class: \"img\" }\nconst _hoisted_8 = { ref: \"img_simpl_name\" }\nconst _hoisted_9 = { class: \"text\" }\nconst _hoisted_10 = { class: \"cel rating\" }\nconst _hoisted_11 = { class: \"img\" }\nconst _hoisted_12 = { ref: \"img_rating\" }\nconst _hoisted_13 = { class: \"text\" }\nconst _hoisted_14 = { class: \"cel address\" }\nconst _hoisted_15 = { class: \"img\" }\nconst _hoisted_16 = { ref: \"img_address\" }\nconst _hoisted_17 = { class: \"text\" }\nconst _hoisted_18 = { class: \"cel\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ParamsList = _resolveComponent(\"ParamsList\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"img\", _hoisted_4, null, 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.name_marker), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"img\", _hoisted_8, null, 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_9, _toDisplayString($data.simpl_name), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_10, [\n      _createElementVNode(\"div\", _hoisted_11, [\n        _createElementVNode(\"img\", _hoisted_12, null, 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_13, _toDisplayString($data.rating), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_14, [\n      _createElementVNode(\"div\", _hoisted_15, [\n        _createElementVNode(\"img\", _hoisted_16, null, 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_17, _toDisplayString($data.address), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_18, [\n      ($data.whattodo && $data.whattodo.length > 0)\n        ? (_openBlock(), _createBlock(_component_ParamsList, {\n            key: 0,\n            params_list: $data.whattodo\n          }, null, 8, [\"params_list\"]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-98fb6cce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"params_list\" }\nconst _hoisted_2 = [\"href\"]\nconst _hoisted_3 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.params_list, (item, index) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"li_h\",\n        key: index\n      }, [\n        (typeof item == 'string' && item.includes('://'))\n          ? (_openBlock(), _createElementBlock(\"a\", {\n              key: 0,\n              target: \"_blank\",\n              href: item\n            }, _toDisplayString(item), 9, _hoisted_2))\n          : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(item), 1))\n      ]))\n    }), 128))\n  ]))\n}","\nexport default {\n    // Аргументы\n    props: {\n        params_list: {\n            type: Object as () => string[] | number[],\n        },\n    },\n};\n","import { render } from \"./ParamsList.vue?vue&type=template&id=98fb6cce&scoped=true&ts=true\"\nimport script from \"./ParamsList.vue?vue&type=script&lang=ts\"\nexport * from \"./ParamsList.vue?vue&type=script&lang=ts\"\n\nimport \"./ParamsList.vue?vue&type=style&index=0&id=98fb6cce&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-98fb6cce\"]])\n\nexport default __exports__","\nimport { ParseUrlSrc, getAddress, whattodoIdFromName } from \"@/helper\";\nimport ParamsList from \"@/stylecomponents/ParamsList.vue\";\nimport { TPropertiesMark } from \"@/interface\";\nimport { mapState } from \"vuex\";\n\nconst name_marker = ParseUrlSrc(\"@/img/name_marker.svg\");\nconst simpl_name = ParseUrlSrc(\"@/img/simpl_name.svg\");\nconst rating = ParseUrlSrc(\"@/img/rating.svg\");\nconst address = ParseUrlSrc(\"@/img/address.svg\");\n\nexport default {\n    components: { ParamsList },\n    data() {\n        return {\n            name_marker: undefined,\n            simpl_name: undefined,\n            rating: undefined,\n            address: undefined,\n            whattodo: undefined,\n        };\n    },\n    mounted() {\n        this.$refs[\"img_name_marker\"].src = name_marker;\n        this.$refs[\"img_simpl_name\"].src = simpl_name;\n        this.$refs[\"img_rating\"].src = rating;\n        this.$refs[\"img_address\"].src = address;\n    },\n    watch: {\n        props_component: {\n            async handler(newValue: TPropertiesMark) {\n                // Эти данные берутся из поверхностной информации\n                this.name_marker =\n                    this.settings_type_place[newValue.type_place].name;\n                this.simpl_name = newValue.simpl_name;\n                this.rating = newValue.rating;\n                this.address = newValue.address;\n                this.whattodo = whattodoIdFromName(newValue);\n                this.address = await getAddress(\n                    newValue.cord_x,\n                    newValue.cord_y\n                );\n            },\n            deep: true,\n        },\n    },\n    computed: {\n        ...mapState(\"geomap\", [\"settings_type_place\", \"select_PropertiesMark\"]),\n        // Отслеживание изменений выбранного маркера\n        props_component() {\n            return this.select_PropertiesMark;\n        },\n    },\n};\n","import { render } from \"./FacileFromMarker.vue?vue&type=template&id=00c3661d&scoped=true&ts=true\"\nimport script from \"./FacileFromMarker.vue?vue&type=script&lang=ts\"\nexport * from \"./FacileFromMarker.vue?vue&type=script&lang=ts\"\n\nimport \"./FacileFromMarker.vue?vue&type=style&index=0&id=00c3661d&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-00c3661d\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, withKeys as _withKeys, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4566017d\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"over_box_body\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"empty\" }, null, -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DetailFromPlace = _resolveComponent(\"DetailFromPlace\")!\n  const _component_ExtraFeaturesWindow = _resolveComponent(\"ExtraFeaturesWindow\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"over_box_comp\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys(\n//@ts-ignore\n(...args) => ($options.hiddenOverBox && $options.hiddenOverBox(...args)), [\"esc\"])),\n    tabindex: \"0\"\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _withDirectives(_createVNode(_component_DetailFromPlace, null, null, 512), [\n        [_vShow, $props.view_component === 'DetailFromPlace']\n      ]),\n      _withDirectives(_createVNode(_component_ExtraFeaturesWindow, { onHiddenOverBox: $options.hiddenOverBox }, null, 8, [\"onHiddenOverBox\"]), [\n        [_vShow, $props.view_component === 'ExtraFeaturesWindow']\n      ])\n    ]),\n    _hoisted_2,\n    _createElementVNode(\"input\", {\n      ref: \"hidden_over_box\",\n      class: \"hidden_over_box\",\n      type: \"image\",\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.hiddenOverBox && $options.hiddenOverBox(...args)))\n    }, null, 512)\n  ], 32))\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-61dabad4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"box\" }\nconst _hoisted_2 = { class: \"title\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"name\"\n}\nconst _hoisted_4 = { class: \"value\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"list\"\n}\nconst _hoisted_6 = [\"href\"]\nconst _hoisted_7 = { key: 2 }\nconst _hoisted_8 = { class: \"box_edit_geomap\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ParamsList = _resolveComponent(\"ParamsList\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.view_list, (item, index) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"row\",\n        key: index\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, _toDisplayString(item.title), 1),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.data, (item2, index2) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"view_list_data\",\n            key: index2\n          }, [\n            (item2.name)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(item2.name), 1))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_4, [\n              (typeof item2.value == 'object')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                    _createVNode(_component_ParamsList, {\n                      params_list: item2.value\n                    }, null, 8, [\"params_list\"])\n                  ]))\n                : (\n                            typeof item2.value == 'string' &&\n                            item2.value.includes('://')\n                        )\n                  ? (_openBlock(), _createElementBlock(\"a\", {\n                      key: 1,\n                      target: \"_blank\",\n                      href: item2.value\n                    }, _toDisplayString(item2.value), 9, _hoisted_6))\n                  : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(item2.value), 1))\n            ])\n          ]))\n        }), 128))\n      ]))\n    }), 128)),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"input\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.clickUpdateGeomap && $options.clickUpdateGeomap(...args))),\n        class: \"edit_geomap\",\n        type: \"image\",\n        ref: \"edit_geomap\"\n      }, null, 512)\n    ])\n  ]))\n}","\nimport {\n    EAverageCostVisit,\n    EAveragePopulation,\n    TPropertiesMark,\n    Tpublic_place_details,\n    TInternetСontacts,\n} from \"@/interface\";\nimport {\n    DownloadFromUrl,\n    ParseUrlSrc,\n    TFromUrl,\n    whattodoIdFromName,\n} from \"@/helper\";\nimport ParamsList from \"@/stylecomponents/ParamsList.vue\";\nimport { mapState } from \"vuex\";\nexport const img_edit_geomap = ParseUrlSrc(\"@/img/edit_geomap.png\");\n\n// Формирует URL для скачивания ppd файла, по указному id места\nexport function template_download_ppd_file(id: number) {\n    return ParseUrlSrc(`@/public_place_details/ppd_${id}.json`);\n}\nexport interface Tview_list_item {\n    // Имя группы\n    title: string;\n    // Данные у жой группы\n    data: {\n        // Имя параметра\n        name?: string;\n        // Значение параметра\n        value: string | number | string[];\n    }[];\n}\n\nfunction Def_InternetСontacts() {\n    return {\n        phones: undefined,\n        website: undefined,\n        tg: undefined,\n        vk: undefined,\n        any_social: undefined,\n        yandex_map: undefined,\n        any_link: undefined,\n    };\n}\n\nexport default {\n    // Компоненты\n    components: { ParamsList },\n    // Переменные\n    data() {\n        return {\n            //-- Из поверхностных данных\n            name_marker: <string>undefined,\n            rating: <number>undefined,\n            simpl_name: <string>undefined,\n            whattodo: <number[]>undefined,\n            address: <string>undefined,\n            //-- Из внешнего файла\n            // Средняя людность:\n            AveragePopulation: <string>undefined,\n            // Средняя стоимость посещения.\n            AverageCostVisit: <string>undefined,\n            // У скольких пользователей, это место добавлено в избранные\n            FavoritesCountMore: <number>undefined,\n            // Это место в интернете\n            InternetСontacts: <TInternetСontacts>Def_InternetСontacts(),\n        };\n    },\n    mounted() {\n        // Иконка для редактирования информации о месте\n        this.$refs[\"edit_geomap\"].src = img_edit_geomap;\n    },\n    // Методы\n    methods: {\n        // Функция для обновления данных в компоненте, она асинхронна потому что скачивает файл с подробными данными о месте\n        async updateData(props: TPropertiesMark) {\n            // Отчистить прошлые значения подробных данных\n            this.clear_ppd();\n            // Получаем новые подробные данные о месте\n            // TODO: Переделать\n            // const ppd_file: TDownloadFromUrl = await DownloadFromUrl(\n            //     template_download_ppd_file(props.id)\n            // );\n            // if (ppd_file.ok) {\n            //     // Распарсить подробные данные, и сохранить значения по нужным переменным\n            //     this.parse_ppd(JSON.parse(await ppd_file.text));\n            // } else {\n            //     console.error(\"Ошибка: ppd файл пустой !\");\n            // }\n        },\n        // Распарсить подробные данные о месте, и записать их в нужные переменные\n        parse_ppd(ppd: Tpublic_place_details) {\n            this.AveragePopulation = EAveragePopulation[ppd.AveragePopulation];\n            this.AverageCostVisit = `${ppd.AverageCostVisit.value} ${\n                EAverageCostVisit[ppd.AverageCostVisit.currency]\n            }`;\n            this.InternetСontacts = ppd.InternetСontacts;\n            this.FavoritesCountMore = `более ${ppd.FavoritesCountMore}`;\n        },\n        // Отчистить переменные которые были заполнены из подробных данных\n        clear_ppd() {\n            this.AveragePopulation = undefined;\n            this.AverageCostVisit = undefined;\n            this.InternetСontacts = Def_InternetСontacts();\n            this.FavoritesCountMore = undefined;\n        },\n\n        clickUpdateGeomap() {},\n    },\n    watch: {\n        props_component: {\n            handler(newValue: TPropertiesMark) {\n                // Эти данные берутся из поверхностной информации\n                this.name_marker =\n                    this.settings_type_place[newValue.type_place].name;\n                this.rating = newValue.rating;\n                this.simpl_name = newValue.simpl_name;\n                this.address = newValue.address;\n                this.whattodo = whattodoIdFromName(newValue);\n                // Получаем подробные данные о месте\n                this.updateData(newValue);\n            },\n            deep: true,\n        },\n    },\n    computed: {\n        ...mapState(\"geomap\", [\"settings_type_place\", \"select_PropertiesMark\"]),\n\n        // Отслеживание изменений выбранного маркера\n        props_component() {\n            return this.select_PropertiesMark;\n        },\n        // Формируем список который будет отображаться в HTML\n        view_list(): Tview_list_item[] {\n            return [\n                {\n                    title: \"Общая информация\",\n                    data: [\n                        {\n                            name: \"Тип маркера\",\n                            value: this.name_marker,\n                        },\n                        {\n                            name: \"Рейтинг\",\n                            value: this.rating,\n                        },\n                        {\n                            name: \"Название\",\n                            value: this.simpl_name,\n                        },\n                        {\n                            name: \"Адрес\",\n                            value: this.address,\n                        },\n                        {\n                            name: \"Средняя людность\",\n                            value: this.AveragePopulation,\n                        },\n                        {\n                            name: \"Средняя стоимость посещения\",\n                            value: this.AverageCostVisit,\n                        },\n                        {\n                            name: \"В избранных\",\n                            value: this.FavoritesCountMore,\n                        },\n                    ],\n                },\n                {\n                    title: \"Чем тут можно заняться\",\n                    data: [\n                        {\n                            value: this.whattodo,\n                        },\n                    ],\n                },\n                {\n                    title: \"Это место в интернете\",\n                    data: [\n                        { name: \"phones\", value: this.InternetСontacts.phones },\n                        {\n                            name: \"website\",\n                            value: this.InternetСontacts.website,\n                        },\n                        { name: \"tg\", value: this.InternetСontacts.tg },\n                        { name: \"vk\", value: this.InternetСontacts.vk },\n                        {\n                            name: \"any_social\",\n                            value: this.InternetСontacts.any_social,\n                        },\n                        {\n                            name: \"yandex_map\",\n                            value: this.InternetСontacts.yandex_map,\n                        },\n                        {\n                            name: \"any_link\",\n                            value: this.InternetСontacts.any_link,\n                        },\n                    ],\n                },\n            ];\n        },\n    },\n};\n","import { render } from \"./DetailFromPlace.vue?vue&type=template&id=61dabad4&scoped=true&ts=true\"\nimport script from \"./DetailFromPlace.vue?vue&type=script&lang=ts\"\nexport * from \"./DetailFromPlace.vue?vue&type=script&lang=ts\"\n\nimport \"./DetailFromPlace.vue?vue&type=style&index=0&id=61dabad4&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61dabad4\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0a0b0e6a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"box_extra\" }\nconst _hoisted_3 = { class: \"box_select_elm\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AddPlace = _resolveComponent(\"AddPlace\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        class: \"row\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => ($options.handleClick('add_place')))\n      }, \" Создать новое место в выбранной точки \"),\n      _createElementVNode(\"div\", {\n        class: \"row\",\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => ($options.channel_list && $options.channel_list(...args)))\n      }, \" Список каналов \"),\n      _createElementVNode(\"div\", {\n        class: \"row\",\n        onClick: _cache[2] || (_cache[2] = ($event: any) => ($options.handleClick('login')))\n      }, \"Вход\"),\n      _createElementVNode(\"div\", {\n        class: \"row\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => ($options.handleClick('registration')))\n      }, \" Регистрация \"),\n      _createElementVNode(\"div\", {\n        class: \"row\",\n        onClick: _cache[4] || (_cache[4] = ($event: any) => ($options.handleClick('about')))\n      }, \"О проекте\")\n    ], 512), [\n      [_vShow, $data.select_elm == undefined]\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _withDirectives(_createVNode(_component_AddPlace, {\n        ref: \"add_place\",\n        onHidden_elm: $options.hidden_elm,\n        onHiddenOverBox: $options.hiddenOverBox\n      }, null, 8, [\"onHidden_elm\", \"onHiddenOverBox\"]), [\n        [_vShow, $data.select_elm === 'add_place']\n      ])\n    ])\n  ]))\n}","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7571a6cd\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"box_extra\" }\nconst _hoisted_2 = { class: \"row\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"label\" }, \"* Короткое имя:\", -1))\nconst _hoisted_4 = { class: \"row\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"label\" }, \"* Рейтинг места:\", -1))\nconst _hoisted_6 = { class: \"row\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"label\" }, \"* What to do:\", -1))\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = { class: \"row\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"label\" }, \"* Type place:\", -1))\nconst _hoisted_11 = [\"value\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_VButton = _resolveComponent(\"VButton\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"label\", _hoisted_2, [\n      _hoisted_3,\n      _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (($data.shortName) = $event))\n      }, null, 512), [\n        [_vModelText, $data.shortName]\n      ])\n    ]),\n    _createElementVNode(\"label\", _hoisted_4, [\n      _hoisted_5,\n      _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (($data.rating) = $event)),\n        type: \"number\",\n        min: \"1\",\n        max: \"5\"\n      }, null, 512), [\n        [_vModelText, $data.rating]\n      ])\n    ]),\n    _createElementVNode(\"label\", _hoisted_6, [\n      _hoisted_7,\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (($data.todo) = $event)),\n        multiple: \"\",\n        class: \"todo\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todoOptions, (option) => {\n          return (_openBlock(), _createElementBlock(\"option\", { value: option }, _toDisplayString(option.todo), 9, _hoisted_8))\n        }), 256))\n      ], 512), [\n        [_vModelSelect, $data.todo]\n      ])\n    ]),\n    _createElementVNode(\"label\", _hoisted_9, [\n      _hoisted_10,\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (($data.typePlace) = $event))\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.typePlaceOptions, (option) => {\n          return (_openBlock(), _createElementBlock(\"option\", { value: option }, _toDisplayString(option.name), 9, _hoisted_11))\n        }), 256))\n      ], 512), [\n        [_vModelSelect, $data.typePlace]\n      ])\n    ]),\n    _createVNode(_component_VButton, {\n      class: \"send_bt\",\n      value: \"Отправить\",\n      onClickBt: $options.create_geomap\n    }, null, 8, [\"onClickBt\"]),\n    _createElementVNode(\"input\", {\n      ref: \"hidden_elm\",\n      class: \"hidden_elm\",\n      type: \"image\",\n      onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => ($options.hidden_elm && $options.hidden_elm(...args)))\n    }, null, 512)\n  ]))\n}","<template>\n    <button class=\"custom-button\" @click=\"handleClick\">{{ value }}</button>\n</template>\n\n<script>\nexport default {\n    props: {\n        value: {\n            type: [String, Number],\n            required: true\n        }\n    },\n    methods: {\n        handleClick() {\n            this.$emit('clickBt', this.value);\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/gcolor.scss\";\n\n.custom-button {\n    display: inline-block;\n    padding: 1rem 1rem;\n    font-size: 1.3rem;\n\n    font-weight: bold;\n    text-align: center;\n    color: #ffffff;\n    background-color: $ЦветФона;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    box-shadow: 0px 0px 0.1rem 0.1rem $ЦветФонаВсплывающегоОкна;\n\n    width: 100%;\n\n    &:hover {\n        background-color: #45a049;\n\n    }\n\n    &:focus {\n        outline: none;\n        box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\n    }\n\n}\n</style>\n","import { render } from \"./VButton.vue?vue&type=template&id=e3fc72d0&scoped=true\"\nimport script from \"./VButton.vue?vue&type=script&lang=js\"\nexport * from \"./VButton.vue?vue&type=script&lang=js\"\n\nimport \"./VButton.vue?vue&type=style&index=0&id=e3fc72d0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e3fc72d0\"]])\n\nexport default __exports__","\nimport { DownloadFromUrl, PostJsonFromUrl } from \"@/helper\";\nimport { TCoord, TGeomap, TTypePlaceObj, TWhatTodoObj } from \"@/interface\";\nimport {\n    arrow_up,\n    place_url,\n    type_place_list_url,\n    what_todo_url,\n} from \"@/pages/MapApp.vue\";\nimport VButton from \"@/stylecomponents/VButton.vue\";\nimport { mapState } from \"vuex\";\n\nexport default {\n    emits: [\"hidden_elm\", \"hiddenOverBox\"],\n    components: { VButton },\n    mounted() {\n        this.$refs[\"hidden_elm\"].src = arrow_up;\n        this.show();\n    },\n    data() {\n        return {\n            shortName: \"\",\n            rating: 1,\n            todo: [] as TWhatTodoObj[],\n            typePlace: {} as TTypePlaceObj,\n            todoOptions: [] as TWhatTodoObj[],\n            typePlaceOptions: [] as TTypePlaceObj[],\n        };\n    },\n    computed: {\n        ...mapState(\"geomap\", [\n            \"select_channel_geomap\",\n            \"coordinat_click\",\n            \"RefMapContainer\",\n        ]),\n    },\n    methods: {\n        hidden_elm() {\n            this.$emit(\"hidden_elm\");\n        },\n        async create_geomap() {\n            console.log(\"Отправка: создание нового места\");\n            const coord: TCoord = this.coordinat_click;\n            console.log(this.$refs);\n            const req = {\n                cord_x: coord.latitude,\n                cord_y: coord.longitude,\n                simpl_name: this.shortName,\n                rating: this.rating,\n                address: \"\",\n                channel_geomap: this.select_channel_geomap.id,\n                what_todo: this.todo.map((element) => element.id),\n                type_place: this.typePlace.id,\n            };\n            const res = await PostJsonFromUrl(place_url, req);\n            if (res.ok) {\n                alert(\"Успешное создание нового места\");\n                this.hidden_elm();\n                this.$emit(\"hiddenOverBox\");\n                // Если произошло успешное создание,\n                // 1. Добавляем маркер на карту\n                this.RefMapContainer._setMarkersFromGeomap(\n                    <TGeomap>JSON.parse(res.data)\n                );\n                // 2. Переходим на карту\n                this.$router.push({\n                    name: \"main_map\",\n                    query: this.$route.query,\n                });\n            } else {\n                alert(`Ошибка создания нового места: ${res.data}`);\n            }\n        },\n\n        async show() {\n            const [todoOptions, typePlaceOptions] = await Promise.all([\n                DownloadFromUrl(what_todo_url),\n                DownloadFromUrl(type_place_list_url),\n            ]);\n\n            if (todoOptions.ok) {\n                this.todoOptions = todoOptions.data as TWhatTodoObj[];\n            }\n\n            if (typePlaceOptions.ok) {\n                this.typePlaceOptions =\n                    typePlaceOptions.data as TTypePlaceObj[];\n            }\n\n            this.typePlace = this.typePlaceOptions[0];\n        },\n    },\n};\n","import { render } from \"./AddPlace.vue?vue&type=template&id=7571a6cd&scoped=true&ts=true\"\nimport script from \"./AddPlace.vue?vue&type=script&lang=ts\"\nexport * from \"./AddPlace.vue?vue&type=script&lang=ts\"\n\nimport \"./AddPlace.vue?vue&type=style&index=0&id=7571a6cd&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7571a6cd\"]])\n\nexport default __exports__","\nimport AddPlace from \"@/components/AddPlace.vue\";\n\nexport default {\n    components: {\n        AddPlace,\n    },\n    data() {\n        return {\n            select_elm: <string>undefined,\n        };\n    },\n    methods: {\n        // Обработчик нажатия на строку\n        async handleClick(link: string) {\n            await this.$refs[link].show();\n            this.select_elm = link;\n        },\n        channel_list() {\n            this.$router.push({ name: 'list_channels' })\n            return\n        },\n        hidden_elm() {\n            this.select_elm = undefined;\n        },\n        hiddenOverBox() {\n            this.$emit(\"hiddenOverBox\");\n        },\n    },\n};\n","import { render } from \"./ExtraFeaturesWindow.vue?vue&type=template&id=0a0b0e6a&scoped=true&ts=true\"\nimport script from \"./ExtraFeaturesWindow.vue?vue&type=script&lang=ts\"\nexport * from \"./ExtraFeaturesWindow.vue?vue&type=script&lang=ts\"\n\nimport \"./ExtraFeaturesWindow.vue?vue&type=style&index=0&id=0a0b0e6a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0a0b0e6a\"]])\n\nexport default __exports__","\nimport { arrow_up } from \"@/pages/MapApp.vue\";\nimport DetailFromPlace from \"@/components/DetailFromPlace.vue\";\nimport ExtraFeaturesWindow from \"@/components/ExtraFeaturesWindow.vue\";\n\nexport default {\n    emits: [\"hidden_over_box\"],\n    components: { DetailFromPlace, ExtraFeaturesWindow },\n    props: {\n        view_component: { type: Object as () => string },\n    },\n    mounted() {\n        this.$refs[\"hidden_over_box\"].src = arrow_up;\n    },\n    // Методы\n    methods: {\n        // Скрыть всплывающие окно\n        hiddenOverBox() {\n            this.$emit(\"hidden_over_box\");\n        },\n    },\n};\n","import { render } from \"./OverBox.vue?vue&type=template&id=4566017d&scoped=true&ts=true\"\nimport script from \"./OverBox.vue?vue&type=script&lang=ts\"\nexport * from \"./OverBox.vue?vue&type=script&lang=ts\"\n\nimport \"./OverBox.vue?vue&type=style&index=0&id=4566017d&lang=scss&scoped=true\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4566017d\"]])\n\nexport default __exports__","\n/*\nГлавный виджет которые имеет виджеты\n- Карту (MapContainer)\n- Информацию о выбранном мести\n*/\n\nimport MapContainer from \"@/components/MapContainer.vue\";\nimport FacileFromMarker from \"@/components/FacileFromMarker.vue\";\nimport OverBox from \"@/components/OverBox.vue\";\nimport MapBrowserEvent from \"ol/MapBrowserEvent\";\nimport {\n    ParseUrlSrc,\n    ParseUrlBackend,\n    clone,\n    DownloadFromUrl,\n    TFromUrl,\n} from \"@/helper\";\nimport { UrlGetParams, UrlGetParamsTypeView, TCoord } from \"@/interface\";\nimport { mapState, mapActions, mapMutations, mapGetters } from \"vuex\";\n\n// ФОТО\nexport const arrow_up = ParseUrlSrc(\"@/img/arrow_up.svg\");\nexport const info_from_place = ParseUrlSrc(\"@/img/info_from_place.svg\");\n// URL для скачивания мета данных о geomap\nexport const geomap_list_from_channel_url = ParseUrlBackend(\n    \"@/api/v1/channel_geomap_place/\"\n);\n// URL для скачивания What Todo\nexport const what_todo_url = ParseUrlBackend(\"@/api/v1/what_todo/\");\n// URL для скачивания Type Place\nexport const type_place_list_url = ParseUrlBackend(\"@/api/v1/type_place/\");\n// URL для создание нового места\nexport const place_url = ParseUrlBackend(\"@/api/v1/place/\");\n// URL для получения списка каналов\nexport const channel_geomap = ParseUrlBackend(\"@/api/v1/channel_geomap/\");\n\nexport default {\n    name: \"MapApp\",\n    components: {\n        MapContainer,\n        FacileFromMarker,\n        OverBox,\n    },\n    data() {\n        return {\n            // ------- Для OverBox\n            // Какой компонент отображается в всплывающем окне\n            view_component: <string>undefined,\n            // Переключатели для отображения объектов в HTML\n            is_show_FacileFromMarker: false,\n            is_show_map_detail: true,\n        };\n    },\n    async mounted() {\n        // 0. Загружаем изображения\n        this.$refs[\"show_map_detail\"].src = arrow_up;\n        this.$refs[\"show_map_detail_place\"].src = info_from_place;\n        // 1. Парсить URL и занести данные в Store\n        await this.Mounted_ParseUrl();\n        // 2. URL для получения списка мест в указном канале\n        this.Update_url_geomap(\n            ParseUrlSrc(geomap_list_from_channel_url) +\n                this.select_channel_geomap.id\n        );\n        this.Update_RefMapContainer(this.$refs[\"MapContainer\"]);\n        // 3. Инициализировать карту\n        this.RefMapContainer._initMap(\n            this.coordinat_click,\n            this.select_zoom,\n            this.url_geomap\n        );\n    },\n    computed: {\n        ...mapState(\"geomap\", [\n            \"select_channel_geomap\",\n            \"coordinat_click\",\n            \"select_zoom\",\n            \"url_geomap\",\n            \"RefMapContainer\",\n        ]),\n        ...mapGetters(\"geomap\", [\"coordinat_click_cord\"]),\n    },\n    methods: {\n        ...mapMutations(\"geomap\", [\n            \"Update_select_zoom\",\n            \"Update_url_geomap\",\n            \"Update_RefMapContainer\",\n        ]),\n\n        ...mapActions(\"geomap\", [\n            \"Update_coordinat_click\",\n            \"Update_select_channel\",\n            \"Update_type_view\",\n        ]),\n        // Сфокусироваться на указанных координатах\n        setCoordinates(coord: string, IfSetMark = false) {\n            this.$refs[\"MapContainer\"].setCoordinates(\n                this.$refs[\"MapContainer\"]._parseCoordFromOpenstreetmap(coord),\n                IfSetMark\n            );\n        },\n        // Обработка нажатия на маркер\n        HandleMarkerClick(PropertiesMark) {\n            // Показать поверхностную информацию\n            this.ShowPlaceFacileInfo();\n        },\n        // Нажатие на пустое место карты(без маркеров)\n        HandleEmptyMapClick(evt: MapBrowserEvent<UIEvent>) {\n            // Показываем кнопку(стрелка вверх) дистальной информации\n            this.is_show_map_detail = true;\n            // Скрываем  панель \"Поверхностной информации\"\n            this.is_show_FacileFromMarker = false;\n        },\n        // Показать поверхностную информацию о выбранном месте\n        ShowPlaceFacileInfo() {\n            // Скрываем кнопку(стрелка вверх) детальной информации\n            this.is_show_map_detail = false;\n            // Показываем панель \"Поверхностной информации\"\n            this.is_show_FacileFromMarker = true;\n        },\n        // Показать подробную информацию о месте\n        ShowPlaceDetailsInfo() {\n            // Показываем во всплывающем окне детальную информацию о месте\n            this.view_component = \"DetailFromPlace\";\n        },\n        // Показать окно дополнительными возможностями\n        ShowExtraFeaturesWindow() {\n            this.view_component = \"ExtraFeaturesWindow\";\n        },\n        // Скрыть всплывающие окно\n        hidden_over_box() {\n            // Скрываем выплывающие окна\n            this.view_component = undefined;\n        },\n        // --------------------\n        async Mounted_ParseUrl() {\n            /* Парсить URL и занести данные в Store */\n\n            // 0. Текущие GET параметры в URL\n            let query = clone(this.$route.query);\n            // 1. Получить канал из URL\n            const channel = parseInt(query[\"c\"]);\n            if (channel !== undefined) {\n                const channels: TFromUrl = await DownloadFromUrl(\n                    channel_geomap + channel\n                );\n                if (channels.ok) {\n                    const channels_json = channels.data;\n                    this.Update_select_channel({\n                        channel: channels_json,\n                        router: this.$router,\n                        route: this.$route,\n                    });\n                } else {\n                    console.error(\"Не удалось получить список каналов\");\n                }\n            } else {\n                console.log(\"Не указан ID канала\");\n                this.$router.push({ name: \"list_channels\" });\n                return;\n            }\n            // 2. Получить масштаб карты из URL\n            let zoom = parseInt(query[\"z\"]);\n            if (!zoom) {\n                zoom = 16;\n            }\n            this.Update_select_zoom(zoom);\n            // 3. Получить координаты для фокусировки\n            this.Update_coordinat_click({\n                coord:\n                    query[UrlGetParams.latitude] &&\n                    query[UrlGetParams.longitude]\n                        ? {\n                              latitude: query[UrlGetParams.latitude],\n                              longitude: query[UrlGetParams.longitude],\n                          }\n                        : {\n                              latitude:\n                                  this.select_channel_geomap.default_coord_x,\n                              longitude:\n                                  this.select_channel_geomap.default_coord_y,\n                          },\n                router: this.$router,\n                route: this.$route,\n            });\n            // 4. Обновляем тип отображения\n            this.Update_type_view({\n                type_view: query[UrlGetParams.type_view]\n                    ? query[UrlGetParams.type_view]\n                    : UrlGetParamsTypeView.main_map,\n                router: this.$router,\n                route: this.$route,\n            });\n            // 5. Обновляем  GET параметры в URL\n            this.$router.push({ query: query });\n        },\n    },\n};\n","import { render } from \"./MapApp.vue?vue&type=template&id=7e3e5eb2&ts=true\"\nimport script from \"./MapApp.vue?vue&type=script&lang=ts\"\nexport * from \"./MapApp.vue?vue&type=script&lang=ts\"\n\nimport \"./MapApp.vue?vue&type=style&index=0&id=7e3e5eb2&lang=scss\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5ad126f2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Список каналов\", -1))\nconst _hoisted_3 = { class: \"box_extra\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_VButton = _resolveComponent(\"VButton\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _withDirectives(_createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.channels, (channel) => {\n        return (_openBlock(), _createBlock(_component_VButton, {\n          class: \"row\",\n          key: channel.id,\n          value: channel.name,\n          onClick: ($event: any) => ($options.selectChannel(channel))\n        }, null, 8, [\"value\", \"onClick\"]))\n      }), 128))\n    ], 512), [\n      [_vShow, _ctx.select_elm == undefined]\n    ])\n  ]))\n}","\nimport { channel_geomap } from \"@/pages/MapApp.vue\";\nimport { DownloadFromUrl, TFromUrl } from \"@/helper\";\nimport { UrlGetParams, TChannelGeomapObj } from \"@/interface\";\nimport VButton from \"@/stylecomponents/VButton.vue\";\nimport { mapActions } from \"vuex\";\n\nexport default {\n    components: { VButton },\n    data() {\n        return {\n            channels: <TChannelGeomapObj[]>[],\n        };\n    },\n    async mounted() {\n        await this.fetchChannels();\n    },\n    methods: {\n        ...mapActions(\"geomap\", [\"Update_select_channel\"]),\n        async fetchChannels() {\n            const channels: TFromUrl = await DownloadFromUrl(channel_geomap);\n            if (channels.ok) {\n                this.channels = channels.data;\n            } else {\n                console.error(\"Не удалось получить список каналов\");\n            }\n        },\n\n        selectChannel(channel: TChannelGeomapObj) {\n            this.Update_select_channel({\n                channel: channel,\n                router: this.$router,\n                route: this.$route,\n            });\n            const c = UrlGetParams.channel;\n            this.$router.push({ name: \"main_map\", query: { c: channel.id } });\n            return;\n        },\n    },\n};\n","import { render } from \"./SelectChenel.vue?vue&type=template&id=5ad126f2&scoped=true&ts=true\"\nimport script from \"./SelectChenel.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectChenel.vue?vue&type=script&lang=ts\"\n\nimport \"./SelectChenel.vue?vue&type=style&index=0&id=5ad126f2&scoped=true&lang=scss\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5ad126f2\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\nimport VueRouter from \"vue-router\";\nimport MapApp from \"@/pages/MapApp.vue\";\nimport SelectChenel from \"@/pages/SelectChenel.vue\";\n\nconst routes: VueRouter.RouteRecordRaw[] = [\n    /*\n    Сюда добавляем пути к компанентам\n    */\n    // Статичный путь.\n    // {\n    //     path: \"/Путь\",\n    //     component: КомпанентVue,\n    // },\n    // Динамический путь. Вместо `id` можно указать любое имя, результат будет храниться в `$route.params`\n    // {\n    //     path: \"/home\",\n    //     // component: MapApp,\n    //     redirect: { name: \"main\" },\n    // },\n    {\n        path: \"/\",\n        name: \"main_map\",\n        component: MapApp,\n        // redirect: { name: \"main_map\" },\n    },\n\n    {\n        path: '/channels',\n        name: 'list_channels',\n        component: SelectChenel\n    }\n    // {\n    // path: \"/map\",\n    // },\n];\n\nexport const router = createRouter({\n    routes,\n    history: createWebHistory(),\n});\n// export default router;\n","import { createStore } from \"vuex\";\nimport { geomap } from \"./geomap\";\nimport { clone } from \"@/helper\";\nimport { router } from \"../router\";\n\nconst router_s2 = router;\n\nexport default createStore({\n    state: {},\n    getters: {},\n    mutations: {},\n    actions: {},\n    modules: {\n        geomap: geomap,\n    },\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport store from \"./store\";\nimport {router} from \"./router\";\n\nexport let app = createApp(App);\n\napp.use(router) // Подключаем ройтер страниц к приложению\n    .use(store)\n    .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb_chillmap\"] = self[\"webpackChunkweb_chillmap\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4335); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_router_view","_resolveComponent","_openBlock","_createBlock","__exports__","UrlGetParamsTypeView","UrlGetParams","EWhenPossibleVisit","EAveragePopulation","Eweekday","EAverageCostVisit","ParseUrlSrc","url_src","replace","ENV_default_host_to_src","ParseUrlBackend","ENV_default_host_to_backend","async","DownloadFromUrl","response","fetch","method","data","json","ok","status","PostJsonFromUrl","body","JSON","stringify","headers","text","clone","value","Array","isArray","map","res","key","whattodoIdFromName","newValue","whattodo","what_todo_obj","forEach","element","push","todo","getAddress","lat","lon","display_name","console","error","geomap","state","geomap_json","settings_type_place","select_PropertiesMark","undefined","coordinat_click","select_zoom","type_view","main_map","select_channel_geomap","url_geomap","RefMapContainer","mutations","AUpdate_select_channel","Update_select_zoom","AUpdate_coordinat_click","AUpdate_type_view","Update_geomap_json","Update_settings_type_place","AUpdate_select_PropertiesMark","Update_url_geomap","Update_RefMapContainer","getters","coordinat_click_cord","c","latitude","longitude","actions","Update_coordinat_click","commit","coord","router","route","query","zoom","mark","id","Update_type_view","Update_select_channel","channel","Update_select_PropertiesMark","namespaced","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","ref","_hoisted_6","_hoisted_7","_hoisted_8","_component_OverBox","_component_MapContainer","_component_FacileFromMarker","_createElementBlock","_withDirectives","_createElementVNode","_createVNode","onHidden_over_box","hidden_over_box","view_component","_vShow","onOnMarkerClick","HandleMarkerClick","onOnEmptyMapClick","HandleEmptyMapClick","type","onClick","args","ShowExtraFeaturesWindow","is_show_map_detail","ShowPlaceDetailsInfo","placeholder","readonly","is_show_FacileFromMarker","style","imgPont","imgSelect","emits","mainLayer","TileLayer","className","source","OSM","preload","visible","selectLayer","Vector_layer","Vector_source","Style","image","Icon","src","scale","toSize","markersLayer","coordinat_click_obj_mark","methods","mapMutations","mapActions","_initMap","default_coord","default_zoom","default_url_geomap","this","olMap","target","$refs","layers","view","View","center","fromLonLat","constrainResolution","projection","setSelectMarker","addLayer","on","HandleClickMap","HandlePointermove","HandleZoom","updateSelectGeomap","ZoomMap","UnZoomMap","setCoordinates","IfSetMark","view_select","setCenter","setMarkers","propsFromFeature","imgUrl","imgSize","labelText","marker","Feature","geometry","Point","setStyle","Text","offsetY","stroke","Stroke","color","width","placement","setProperties","getSource","addFeature","_setMarkersFromGeomap","place","item","type_place","img_url","img_size_w","img_size_h","rating","simpl_name","substring","_parseCoordFromOpenstreetmap","cord_x","cord_y","PropertiesMark","name","removeFeature","url_download","ClearMarkers","ShowPlaceFromExternal","layer","clear","self_geomap","setVisible","places","settings","_CheckIntersectionsMarker","evt","forEachFeatureAtPixel","pixel","feat","getClassName","HandleMarkerHover","transform","coordinate","reverse","$router","$route","toString","log","$emit","debug","getProperties","values_","str_coord","l","split","length","parseFloat","warn","computed","getView","layers_select","getLayers","mapState","mapGetters","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_component_ParamsList","_toDisplayString","name_marker","address","params_list","_createCommentVNode","_Fragment","_renderList","index","includes","href","props","Object","components","ParamsList","mounted","watch","props_component","deep","_withScopeId","n","_pushScopeId","_popScopeId","_component_DetailFromPlace","_component_ExtraFeaturesWindow","onKeyup","_withKeys","hiddenOverBox","tabindex","onHiddenOverBox","view_list","title","item2","index2","clickUpdateGeomap","img_edit_geomap","Def_InternetСontacts","phones","website","tg","vk","any_social","yandex_map","any_link","AveragePopulation","AverageCostVisit","FavoritesCountMore","InternetСontacts","clear_ppd","parse_ppd","ppd","currency","handler","updateData","_component_AddPlace","$event","handleClick","channel_list","select_elm","onHidden_elm","hidden_elm","_component_VButton","shortName","_vModelText","min","max","multiple","todoOptions","option","_vModelSelect","typePlace","typePlaceOptions","onClickBt","create_geomap","String","Number","required","VButton","arrow_up","show","req","channel_geomap","what_todo","place_url","alert","parse","Promise","all","what_todo_url","type_place_list_url","AddPlace","link","DetailFromPlace","ExtraFeaturesWindow","info_from_place","geomap_list_from_channel_url","MapContainer","FacileFromMarker","OverBox","Mounted_ParseUrl","ShowPlaceFacileInfo","parseInt","channels","channels_json","default_coord_x","default_coord_y","selectChannel","fetchChannels","routes","path","component","MapApp","SelectChenel","createRouter","history","createWebHistory","createStore","modules","app","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}